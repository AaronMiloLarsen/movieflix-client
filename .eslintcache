[{"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\index.tsx":"1","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\reportWebVitals.ts":"2","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\App.tsx":"3","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\HomePage.tsx":"4","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Header.tsx":"5","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Auth.tsx":"6","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Login.tsx":"7","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Signup.tsx":"8","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\theme.tsx":"9","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Footer.tsx":"10","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\IndividualMovie.tsx":"11","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\UserHome.tsx":"12","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\About.tsx":"13","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Admin.tsx":"14","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\Profile.tsx":"15","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\AddMovie.tsx":"16","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\IndividualUser.tsx":"17","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyComments.tsx":"18","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyMovies.tsx":"19","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyReviews.tsx":"20","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\AddReview.tsx":"21","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\ViewReviews.tsx":"22","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\DeleteUser.tsx":"23","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\EditMovie.tsx":"24","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\EditReview.tsx":"25","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\DeleteMovie.tsx":"26","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\DeleteReview.tsx":"27","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\EditComment.tsx":"28","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\DeleteComment.tsx":"29","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\ViewComments.tsx":"30","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\AddComment.tsx":"31"},{"size":500,"mtime":499162500000,"results":"32","hashOfConfig":"33"},{"size":425,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":3574,"mtime":1612368262961,"results":"35","hashOfConfig":"33"},{"size":1709,"mtime":1612368262973,"results":"36","hashOfConfig":"33"},{"size":4173,"mtime":1612368262972,"results":"37","hashOfConfig":"33"},{"size":3491,"mtime":1612368262964,"results":"38","hashOfConfig":"33"},{"size":3586,"mtime":1612368262965,"results":"39","hashOfConfig":"33"},{"size":4350,"mtime":1612368262966,"results":"40","hashOfConfig":"33"},{"size":417,"mtime":1610798911665,"results":"41","hashOfConfig":"33"},{"size":631,"mtime":1612368262971,"results":"42","hashOfConfig":"33"},{"size":2927,"mtime":1612368262976,"results":"43","hashOfConfig":"33"},{"size":4685,"mtime":1612368262974,"results":"44","hashOfConfig":"33"},{"size":1725,"mtime":1612368262969,"results":"45","hashOfConfig":"33"},{"size":2564,"mtime":1612368262970,"results":"46","hashOfConfig":"33"},{"size":2794,"mtime":1612368262978,"results":"47","hashOfConfig":"33"},{"size":4662,"mtime":1612368262974,"results":"48","hashOfConfig":"33"},{"size":2880,"mtime":1612368262973,"results":"49","hashOfConfig":"33"},{"size":5226,"mtime":1612368262977,"results":"50","hashOfConfig":"33"},{"size":5674,"mtime":1612368262977,"results":"51","hashOfConfig":"33"},{"size":5623,"mtime":1612368262978,"results":"52","hashOfConfig":"33"},{"size":4844,"mtime":1612368262979,"results":"53","hashOfConfig":"33"},{"size":5030,"mtime":1612368262981,"results":"54","hashOfConfig":"33"},{"size":1957,"mtime":1612368262970,"results":"55","hashOfConfig":"33"},{"size":4551,"mtime":1612368262976,"results":"56","hashOfConfig":"33"},{"size":4604,"mtime":1612368262980,"results":"57","hashOfConfig":"33"},{"size":1944,"mtime":1612368262975,"results":"58","hashOfConfig":"33"},{"size":1959,"mtime":1612368262980,"results":"59","hashOfConfig":"33"},{"size":3152,"mtime":1612368262967,"results":"60","hashOfConfig":"33"},{"size":1865,"mtime":1612368262967,"results":"61","hashOfConfig":"33"},{"size":5263,"mtime":1612368262968,"results":"62","hashOfConfig":"33"},{"size":3132,"mtime":1612368262966,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"dcdvfl",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\index.tsx",[],["135","136"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\reportWebVitals.ts",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\App.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\HomePage.tsx",["137","138","139","140"],"import React from 'react';\r\n\r\nimport { Button, Grid, Typography } from '@material-ui/core'\r\n\r\nimport image from '../../assets/homeImage.png'\r\n\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\ntype States = {\r\n\r\n}\r\n\r\n\r\nclass HomePage extends React.Component<Props, States> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    welcomeStyle = {\r\n        root: {\r\n            width: '100%',\r\n            height: '100%',\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n                justify=\"center\"\r\n                style={this.welcomeStyle.root}\r\n                className='homepage'>\r\n                <Grid item xs={6}>\r\n                    <Typography variant=\"h3\" gutterBottom>\r\n                        Welcome to Movieflix!\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" gutterBottom>\r\n                        Login or Signup for a free account to get started!\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <img src={image} width='auto' height='400px' className='homeImage' />\r\n                </Grid>\r\n                <Grid container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={this.welcomeStyle.root} >\r\n                    <Button href='/user/login' variant=\"contained\" >Login</Button>\r\n                    <br />\r\n                    <br />\r\n                    <Button href='/user/signup' variant=\"contained\">Signup</Button>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Header.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Auth.tsx",["141"],"\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch,  } from 'react-router-dom'\r\n\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\n\r\n\r\ntype AuthProps = {\r\n  updateToken: (newToken:string, userId: string) => void;\r\n  redirect: () => void,\r\n  redirectValue: string,\r\n  \r\n\r\n}\r\n\r\ntype AuthStates = {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n    sessionToken: any;\r\n    getToken: any;\r\n    setFirstName: (e: any) => any;\r\n    setLastName: (e: any) => any;\r\n    setEmail: (e: any) => any;\r\n    setPassword: (e: any) => any;\r\n}\r\n\r\n\r\n \r\nclass Auth extends React.Component< AuthProps, AuthStates> {\r\n    constructor(props: AuthProps) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            sessionToken: \"\",\r\n            getToken: '',\r\n            setFirstName: (e:any) => {\r\n              this.setState({\r\n                firstName: e\r\n              })\r\n            },\r\n            setLastName: (e:any) => {\r\n              this.setState({\r\n                lastName: e\r\n              })\r\n            },\r\n            setEmail: (e:any) => {\r\n              this.setState({\r\n                email: e\r\n              })\r\n            },\r\n            setPassword: (e:any) => {\r\n              this.setState({\r\n                password: e\r\n              })\r\n            },\r\n           \r\n          }\r\n        };\r\n\r\n       \r\n\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                \r\n                    <Switch>\r\n                        <Route exaxt path='/user/login'>\r\n                            <Login \r\n                            email = {this.state.email}\r\n                            password = {this.state.password}\r\n                            setEmail = {this.state.setEmail}\r\n                            setPassword = {this.state.setPassword}\r\n                            sessionToken = {this.state.sessionToken}\r\n                            getToken={this.state.getToken}\r\n                            updateToken = {this.props.updateToken}\r\n                            redirect = {this.props.redirect}\r\n                            redirectValue={this.props.redirectValue}\r\n                            \r\n                            />\r\n                        </Route>\r\n              \r\n                        <Route exact path='/user/signup'>\r\n                            <Signup \r\n                            firstName = {this.state.firstName}\r\n                            lastName = {this.state.lastName}\r\n                            email = {this.state.email}\r\n                            password = {this.state.password}\r\n                            setFirstName = {this.state.setFirstName}\r\n                            setLastName = {this.state.setLastName}\r\n                            setEmail = {this.state.setEmail}\r\n                            setPassword = {this.state.setPassword}\r\n                            sessionToken = {this.state.sessionToken}\r\n                            updateToken = {this.props.updateToken}\r\n                            redirect = {this.props.redirect}\r\n                            redirectValue = {this.props.redirectValue}\r\n                            \r\n                            />\r\n                        </Route>\r\n                    </Switch>\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Auth;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Login.tsx",["142","143","144","145","146","147","148","149"],"import React from 'react'\r\nimport {Button, Grid, TextField} from '@material-ui/core';\r\n\r\nimport { Redirect, } from 'react-router-dom'\r\n\r\ntype LoginProps = {\r\n    email: string;\r\n    password: string;\r\n    updateToken: (newToken:string, userId:string) => void;\r\n    sessionToken: any;\r\n    getToken: any;\r\n    setEmail: (e: any) => any;\r\n    setPassword: (e: any) => any;\r\n    redirect: () => void\r\n    redirectValue: string;\r\n}\r\n\r\ntype LoginStates = {\r\n    hidden: boolean\r\n    redirectValue: null|string\r\n}\r\n\r\n \r\nclass Login extends React.Component<LoginProps, LoginStates > {\r\n    constructor(props: LoginProps) {\r\n        super(props);\r\n        this.state = {\r\n            redirectValue: null,\r\n            hidden: true\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event:any) => {\r\n        event.preventDefault();\r\n        fetch('http://localhost:3500/user/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                user: {\r\n                    email: this.props.email,\r\n                    password: this.props.password\r\n                }\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n            \r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                  console.log(\"Login successful.\")\r\n                  \r\n                } else {\r\n                  console.log(\"Login failed.\");\r\n                \r\n                }\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                this.props.updateToken(data.sessionToken, data.user.id)\r\n                console.log(data.sessionToken)\r\n                if (data.user.admin === true){\r\n                    localStorage.setItem('admin', 'true')\r\n                }\r\n                this.setState({redirectValue: '/userhome'})\r\n                \r\n            })\r\n    }\r\n\r\n    welcomeStyle = {\r\n        root: {\r\n            display:'flex',\r\n            width: '100vw',\r\n            margin: 'auto',\r\n            height: '100%',\r\n        }\r\n    }\r\n\r\n    render() { \r\n        if (this.state.redirectValue){\r\n            return <Redirect to = {this.state.redirectValue} />\r\n        }\r\n        return (\r\n            <Grid \r\n            style={this.welcomeStyle.root}\r\n            className='homepage'\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            >\r\n                \r\n                \r\n                <h3>Login</h3>\r\n                \r\n                <form onSubmit = {this.handleSubmit}>\r\n               \r\n                <br />\r\n                <TextField \r\n                label=\"email\"\r\n                id=\"email\"  \r\n                className='email'\r\n                onChange={(e) => this.props.setEmail(e.target.value)} \r\n                value={this.props.email}/>\r\n\r\n                <br />\r\n                \r\n                <br />\r\n                <TextField\r\n                    label=\"password\" \r\n                    id=\"password\" \r\n                    type={this.state.hidden ? 'password' : 'text'}\r\n                    className='password' \r\n                    onChange={(e) => this.props.setPassword(e.target.value)} \r\n                    value={this.props.password}/>\r\n                    {/* <Button onClick={(e) => this.toggleShow}>Show / Hide</Button> */}\r\n                <br />\r\n                <br/>\r\n                <Button type=\"submit\" value=\"Submit\"> Submit</Button>\r\n                </form> \r\n                \r\n                \r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Login;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Signup.tsx",["150","151","152","153","154","155"],"import React from 'react'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport {Button, Container, TextField} from '@material-ui/core';\r\n\r\n\r\ntype SignupProps = {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n    updateToken: (newToken: string, userId: string) => void;\r\n    sessionToken: any;\r\n    setFirstName: (e: any) => any;\r\n    setLastName: (e: any) => any;\r\n    setEmail: (e: any) => any;\r\n    setPassword: (e: any) => any;\r\n    redirect: () => void;\r\n    redirectValue: string\r\n}\r\n\r\ntype SignupStates = {\r\n    updateToken: (newToken: string) => void;\r\n    redirectValue: null | string;\r\n    hidden: boolean\r\n}\r\n\r\nclass Signup extends React.Component<SignupProps, SignupStates> {\r\n    constructor(props: SignupProps) {\r\n        super(props);\r\n        this.state = {\r\n            updateToken: (any) => any,\r\n            redirectValue: null,\r\n            hidden:true\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        fetch(`http://localhost:3500/user/signup`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                user: {\r\n                    firstName: this.props.firstName,\r\n                    lastName: this.props.lastName,\r\n                    email: this.props.email,\r\n                    password: this.props.password\r\n                }\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n        .then((res) => {\r\n            if (res.status === 200) {\r\n              console.log(\"Signup Successful!\")\r\n            } else {\r\n              console.log(\"Signup Failed!\");\r\n            }\r\n            console.log(res)\r\n            return res.json();\r\n            \r\n        })\r\n        .then((data) => {\r\n                console.log(data)\r\n                this.props.updateToken(data.sessionToken, data.user.id)\r\n                this.setState({redirectValue: '/userhome'})\r\n            })\r\n    };\r\n\r\n    toggleShow = () => {\r\n        this.setState({hidden: !this.state.hidden})\r\n    }\r\n    \r\n\r\n    render() {\r\n        if (this.state.redirectValue){\r\n            return <Redirect to = {this.state.redirectValue} />\r\n        }\r\n        return (\r\n            <div>\r\n                <Container maxWidth=\"sm\">\r\n                    <h3>Signup</h3>\r\n                    <form onSubmit = {this.handleSubmit}>\r\n                        \r\n                        <br />\r\n                        <TextField\r\n                            label=\"First Name\" \r\n                            id=\"firstName\"\r\n                            className='firstName'\r\n                            onChange={(e) => this.props.setFirstName(e.target.value)} \r\n                            value={this.props.firstName}/>\r\n                        <br />\r\n                        \r\n                        <br />\r\n                        <TextField\r\n                            label=\"Last Name\" \r\n                            id=\"lastName\" \r\n                            className='lastName' \r\n                            onChange={(e) => this.props.setLastName(e.target.value)} \r\n                            value={this.props.lastName}/>\r\n                        <br />\r\n                        \r\n                        <br />\r\n                        <TextField\r\n                            label=\"Email\"  \r\n                            id=\"email\" \r\n                            className='email' \r\n                            onChange={(e) => this.props.setEmail(e.target.value)} \r\n                            value={this.props.email}/>\r\n                        <br />\r\n                        \r\n                        <br />\r\n                        <TextField\r\n                            type={this.state.hidden ? 'password' : 'text'}\r\n                            label=\"Password\" \r\n                            id=\"password\"  \r\n                            className='password' \r\n                            onChange={(e) => this.props.setPassword(e.target.value)} \r\n                            value={this.props.password}/>\r\n                        <br />\r\n                        <Button type=\"submit\" value=\"Submit\">Submit </Button>\r\n                    </form> \r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\theme.tsx",[],["156","157"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Footer.tsx",["158","159"],"import React from 'react';\r\n\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n \r\nclass Footer extends React.Component {\r\n   \r\n\r\n    footerStyle = {\r\n        root: {\r\n            width: '100%',\r\n            height: '50px',\r\n            \r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div style={this.footerStyle.root}>\r\n                \r\n                <Typography style={{float:\"right\"}}variant='body1'><CopyrightIcon/> Copyright 2021 Movieflix</Typography>\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\IndividualMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\UserHome.tsx",["160","161","162","163","164","165","166","167","168"],"import React from 'react';\r\n\r\nimport { Button, Grid } from '@material-ui/core'\r\n\r\nimport IndividualMovie from '../movie/IndividualMovie';\r\nimport AddMovie from '../movie/AddMovie';\r\n\r\n\r\ntype UserHomeProps = {\r\n    sessionToken: string\r\n}\r\n\r\ntype UserHomeStates = {\r\n    movie: any,\r\n    movieTitle: string,\r\n    movieYear: number,\r\n    movieDuration: number,\r\n    movieDescription: string,\r\n    addMovie: boolean\r\n    reviewTitle: string,\r\n    reviewEmotion: string,\r\n    reviewAuthor: string,\r\n    comment: string,\r\n    commentAuthor: string\r\n    setMovie: (e: any) => void;\r\n    setReviewTitle: (e: any) => any;\r\n    setReviewEmotion: (e: any) => any;\r\n    setReviewAuthor: (e: any) => any;\r\n    setComment: (e: any) => any;\r\n    setCommentAuthor: (e: any) => any;\r\n    updateToken: any;\r\n    sessionToken: any;\r\n    redirectValue: string\r\n\r\n\r\n}\r\n\r\n//TRYING TO SEND MOVIE OBJECT DOWN TO INDIVIDUAL MOVIE TO BE MAPPED //\r\n\r\nclass UserHome extends React.Component<UserHomeProps, UserHomeStates> {\r\n    constructor(props: UserHomeProps) {\r\n        super(props);\r\n        this.state = {\r\n            movie: [],\r\n            movieTitle: \"\",\r\n            movieYear: 0,\r\n            movieDuration: 0,\r\n            movieDescription: \"\",\r\n            addMovie: false,\r\n            reviewTitle: \" \",\r\n            reviewEmotion: \" \",\r\n            reviewAuthor: \"\",\r\n            comment: \"\",\r\n            commentAuthor: \"\",\r\n            updateToken: \"\",\r\n            sessionToken: \"\",\r\n            redirectValue: '',\r\n            setMovie: (e: any) => {\r\n                this.setState({\r\n                    movie: e\r\n                })\r\n            },\r\n            setReviewTitle: (e) => {\r\n                this.setState({\r\n                    reviewTitle: e\r\n                })\r\n            },\r\n            setReviewEmotion: (e) => {\r\n                this.setState({\r\n                    reviewEmotion: e\r\n                })\r\n            },\r\n            setReviewAuthor: (e) => {\r\n                this.setState({\r\n                    reviewAuthor: e\r\n                })\r\n            },\r\n            setComment: (e) => {\r\n                this.setState({\r\n                    comment: e\r\n                })\r\n            },\r\n            setCommentAuthor: (e) => {\r\n                this.setState({\r\n                    commentAuthor: e\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchMovies = () => {\r\n        fetch('http://localhost:3500/movie/', {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token') || ''\r\n            })\r\n        }).then((movie) => movie.json())\r\n            .then((movieData) => {\r\n                this.setState({\r\n                    movie: movieData\r\n                })\r\n                console.log(movieData)\r\n            }).catch(\r\n                (err) => console.log(err)\r\n            )\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('token')) {\r\n            this.fetchMovies();\r\n        }\r\n    }\r\n\r\n    movieMapper = () => {\r\n        return (this.state.movie?.map((movie: any, index: number) => {\r\n            return (\r\n                <div key={movie.id}>\r\n                    <IndividualMovie\r\n                        movie={movie}\r\n                        sessionToken={this.props.sessionToken}\r\n                    // fetchMovies={this.fetchMovies}  \r\n                    />\r\n                </div>\r\n            )\r\n        }))\r\n    }\r\n\r\n    addMovieOn = () => {\r\n        this.setState({ addMovie: true })\r\n    }\r\n\r\n    addMovieOff = () => {\r\n        this.setState({ addMovie: false })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n\r\n                <h3>Welcome User</h3>\r\n                <Grid container\r\n                    spacing={2}\r\n\r\n                    alignContent='center'\r\n                >\r\n                    {this.movieMapper()}\r\n                </Grid>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <div>\r\n                    <Button variant=\"contained\" onClick={(e: any) => this.addMovieOn()}>Post A Movie</Button>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n\r\n\r\n                {this.state.addMovie ?\r\n                    <AddMovie\r\n                        sessionToken={this.props.sessionToken}\r\n                        addMovie={this.state.addMovie}\r\n                        fetchMovies={this.fetchMovies}\r\n                        addMovieOff={this.addMovieOff}\r\n                    /> : <></>\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHome;\r\n","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\About.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Admin.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\Profile.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\AddMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\IndividualUser.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyComments.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyMovies.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyReviews.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\AddReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\ViewReviews.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\DeleteUser.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\EditMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\EditReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\DeleteMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\DeleteReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\EditComment.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\DeleteComment.tsx",["169"],"import { Button, Dialog, DialogActions, DialogContent, Modal } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\ntype DeleteCommentProps = {\r\n    deleteCommentOff: () => void;\r\n    sessionToken: string;\r\n    fetchMyComments: () => void;\r\n    myComments: any;\r\n    commentId: number;\r\n}\r\n\r\ntype DeleteCommentStates = {\r\n    open: boolean;\r\n    \r\n}\r\n \r\nclass DeleteComment extends React.Component<DeleteCommentProps, DeleteCommentStates> {\r\n    constructor(props: DeleteCommentProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        };\r\n    }\r\n\r\n    handleDelete = (e:any) => {\r\n        fetch(`http://localhost:3500/comment/${this.props.commentId}`,{\r\n        method: 'DELETE',\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': this.props.sessionToken\r\n        })\r\n    })\r\n    .then(response => response.json());\r\n    console.log('Comment was deleted.');\r\n    this.props.deleteCommentOff()\r\n    this.props.fetchMyComments();\r\n    }   \r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n        this.props.deleteCommentOff()\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <>\r\n            <Dialog open={this.state.open}>\r\n                <DialogContent>Delete this Comment?</DialogContent>\r\n                <DialogActions>\r\n                <Button\r\n                startIcon={<CancelIcon/>}\r\n                onClick={this.handleClose}>Cancel</Button>\r\n                <Button\r\n                startIcon={<DeleteForeverIcon/>}\r\n                onClick={this.handleDelete}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default DeleteComment;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\ViewComments.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\AddComment.tsx",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":3,"column":27,"nodeType":"176","messageId":"177","endLine":3,"endColumn":33},{"ruleId":"174","severity":1,"message":"178","line":3,"column":35,"nodeType":"176","messageId":"177","endLine":3,"endColumn":40},{"ruleId":"174","severity":1,"message":"179","line":3,"column":42,"nodeType":"176","messageId":"177","endLine":3,"endColumn":48},{"ruleId":"180","severity":1,"message":"181","line":17,"column":5,"nodeType":"182","messageId":"183","endLine":20,"endColumn":6},{"ruleId":"174","severity":1,"message":"184","line":3,"column":50,"nodeType":"176","messageId":"177","endLine":3,"endColumn":60},{"ruleId":"174","severity":1,"message":"185","line":2,"column":9,"nodeType":"176","messageId":"177","endLine":2,"endColumn":20},{"ruleId":"174","severity":1,"message":"186","line":2,"column":22,"nodeType":"176","messageId":"177","endLine":2,"endColumn":32},{"ruleId":"174","severity":1,"message":"187","line":2,"column":34,"nodeType":"176","messageId":"177","endLine":2,"endColumn":39},{"ruleId":"174","severity":1,"message":"188","line":2,"column":41,"nodeType":"176","messageId":"177","endLine":2,"endColumn":55},{"ruleId":"174","severity":1,"message":"189","line":2,"column":57,"nodeType":"176","messageId":"177","endLine":2,"endColumn":63},{"ruleId":"174","severity":1,"message":"190","line":2,"column":76,"nodeType":"176","messageId":"177","endLine":2,"endColumn":80},{"ruleId":"174","severity":1,"message":"184","line":4,"column":20,"nodeType":"176","messageId":"177","endLine":4,"endColumn":30},{"ruleId":"191","severity":1,"message":"192","line":110,"column":1,"nodeType":"193","messageId":"194","endLine":134,"endColumn":105},{"ruleId":"174","severity":1,"message":"185","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":21},{"ruleId":"174","severity":1,"message":"186","line":5,"column":23,"nodeType":"176","messageId":"177","endLine":5,"endColumn":33},{"ruleId":"174","severity":1,"message":"187","line":5,"column":35,"nodeType":"176","messageId":"177","endLine":5,"endColumn":40},{"ruleId":"174","severity":1,"message":"188","line":5,"column":42,"nodeType":"176","messageId":"177","endLine":5,"endColumn":56},{"ruleId":"174","severity":1,"message":"195","line":5,"column":58,"nodeType":"176","messageId":"177","endLine":5,"endColumn":71},{"ruleId":"174","severity":1,"message":"189","line":5,"column":84,"nodeType":"176","messageId":"177","endLine":5,"endColumn":90},{"ruleId":"170","replacedBy":"196"},{"ruleId":"172","replacedBy":"197"},{"ruleId":"174","severity":1,"message":"198","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":19},{"ruleId":"180","severity":1,"message":"181","line":13,"column":5,"nodeType":"182","messageId":"183","endLine":15,"endColumn":6},{"ruleId":"174","severity":1,"message":"199","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":18},{"ruleId":"174","severity":1,"message":"179","line":2,"column":20,"nodeType":"176","messageId":"177","endLine":2,"endColumn":26},{"ruleId":"174","severity":1,"message":"178","line":2,"column":28,"nodeType":"176","messageId":"177","endLine":2,"endColumn":33},{"ruleId":"174","severity":1,"message":"200","line":4,"column":9,"nodeType":"176","messageId":"177","endLine":4,"endColumn":18},{"ruleId":"174","severity":1,"message":"201","line":4,"column":34,"nodeType":"176","messageId":"177","endLine":4,"endColumn":45},{"ruleId":"174","severity":1,"message":"202","line":4,"column":47,"nodeType":"176","messageId":"177","endLine":4,"endColumn":51},{"ruleId":"174","severity":1,"message":"203","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":127,"column":13,"nodeType":"206","messageId":"207","endLine":140,"endColumn":25,"fix":"208"},{"ruleId":"204","severity":1,"message":"209","line":127,"column":13,"nodeType":"206","messageId":"207","endLine":133,"endColumn":21,"fix":"210"},{"ruleId":"174","severity":1,"message":"211","line":1,"column":56,"nodeType":"176","messageId":"177","endLine":1,"endColumn":61},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useHistory' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Input' is defined but never used.","'FormHelperText' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'ThemeProvider' is defined but never used.",["212"],["213"],"'Component' is defined but never used.","'Redirect' is defined but never used.","'Container' is defined but never used.","'CardContent' is defined but never used.","'Card' is defined but never used.","'IndividualMovie' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"214","text":"215"},"Unexpected whitespace before property then.",{"range":"216","text":"215"},"'Modal' is defined but never used.","no-global-assign","no-unsafe-negation",[4106,4108],".",[3815,3817]]