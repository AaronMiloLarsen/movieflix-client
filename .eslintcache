[{"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\index.tsx":"1","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\reportWebVitals.ts":"2","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\App.tsx":"3","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\HomePage.tsx":"4","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Header.tsx":"5","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Auth.tsx":"6","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Login.tsx":"7","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Signup.tsx":"8","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\theme.tsx":"9","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Footer.tsx":"10","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\SideBar.tsx":"11","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\IndividualMovie.tsx":"12","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\UserHome.tsx":"13","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\AddMovie.tsx":"14","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\AddReview.tsx":"15","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\ViewReviews.tsx":"16","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\AddComment.tsx":"17","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\IndividualReview.tsx":"18","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\ViewComments.tsx":"19","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\Profile.tsx":"20","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyMovies.tsx":"21","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyComments.tsx":"22","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyReviews.tsx":"23","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\EditMovie.tsx":"24","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\EditReview.tsx":"25","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\EditComment.tsx":"26","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\DeleteMovie.tsx":"27","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\DeleteReview.tsx":"28","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\DeleteComment.tsx":"29","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Admin.tsx":"30","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\IndividualUser.tsx":"31","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\DeleteUser.tsx":"32","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\About.tsx":"33"},{"size":500,"mtime":499162500000,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":4333,"mtime":1612302539631,"results":"37","hashOfConfig":"35"},{"size":1076,"mtime":1612300452441,"results":"38","hashOfConfig":"35"},{"size":3296,"mtime":1612302603249,"results":"39","hashOfConfig":"35"},{"size":3729,"mtime":1612279706508,"results":"40","hashOfConfig":"35"},{"size":5054,"mtime":1612301317952,"results":"41","hashOfConfig":"35"},{"size":6808,"mtime":1612302790706,"results":"42","hashOfConfig":"35"},{"size":417,"mtime":1610798911665,"results":"43","hashOfConfig":"35"},{"size":688,"mtime":1612303237221,"results":"44","hashOfConfig":"35"},{"size":1051,"mtime":1611469100519,"results":"45","hashOfConfig":"35"},{"size":2986,"mtime":1611983513342,"results":"46","hashOfConfig":"35"},{"size":6204,"mtime":1612275233405,"results":"47","hashOfConfig":"35"},{"size":4574,"mtime":1612071697955,"results":"48","hashOfConfig":"35"},{"size":5162,"mtime":1611983586250,"results":"49","hashOfConfig":"35"},{"size":6264,"mtime":1612059804160,"results":"50","hashOfConfig":"35"},{"size":3252,"mtime":1611929169546,"results":"51","hashOfConfig":"35"},{"size":1190,"mtime":1611926569604,"results":"52","hashOfConfig":"35"},{"size":5312,"mtime":1611992055508,"results":"53","hashOfConfig":"35"},{"size":4785,"mtime":1612196491689,"results":"54","hashOfConfig":"35"},{"size":5540,"mtime":1612192068497,"results":"55","hashOfConfig":"35"},{"size":5309,"mtime":1612194932556,"results":"56","hashOfConfig":"35"},{"size":5350,"mtime":1612193721017,"results":"57","hashOfConfig":"35"},{"size":5468,"mtime":1612183749806,"results":"58","hashOfConfig":"35"},{"size":5521,"mtime":1612181989078,"results":"59","hashOfConfig":"35"},{"size":4387,"mtime":1612187081341,"results":"60","hashOfConfig":"35"},{"size":1829,"mtime":1612192520013,"results":"61","hashOfConfig":"35"},{"size":1834,"mtime":1612193999302,"results":"62","hashOfConfig":"35"},{"size":1865,"mtime":1612194929947,"results":"63","hashOfConfig":"35"},{"size":2892,"mtime":1612292129759,"results":"64","hashOfConfig":"35"},{"size":2960,"mtime":1612292426746,"results":"65","hashOfConfig":"35"},{"size":1826,"mtime":1612293430749,"results":"66","hashOfConfig":"35"},{"size":1596,"mtime":1612302420766,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"dcdvfl",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\index.tsx",[],["143","144"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\reportWebVitals.ts",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\App.tsx",["145","146","147"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\HomePage.tsx",["148","149"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Header.tsx",["150"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Auth.tsx",["151"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Login.tsx",["152","153","154"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Signup.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\theme.tsx",[],["155","156"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Footer.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\SideBar.tsx",["157"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\IndividualMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\UserHome.tsx",["158","159","160","161","162","163"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\AddMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\AddReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\ViewReviews.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\AddComment.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\IndividualReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\ViewComments.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\Profile.tsx",["164"],"import React from 'react'\r\n\r\n\r\nimport MyMovies from '../profile/MyMovies'\r\nimport MyReviews from '../profile/MyReviews'\r\nimport MyComments from '../profile/MyComments'\r\n\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\n\r\n\r\ntype ProfileProps = {\r\n    userId: string\r\n    sessionToken: string\r\n}\r\n\r\ntype ProfileStates = {\r\n    // myMovies: any;\r\n    myReviews: any;\r\n    myComments: any;\r\n    userId: string;\r\n    openMovies: boolean;\r\n    openReviews: boolean;\r\n    openComments: boolean\r\n}\r\n\r\nclass Profile extends React.Component<ProfileProps, ProfileStates> {\r\n    constructor(props: ProfileProps) {\r\n        super(props);\r\n        this.state = {\r\n            // myMovies: [],\r\n            myReviews: [],\r\n            myComments: [],\r\n            userId: '',\r\n            openMovies: false,\r\n            openReviews: false,\r\n            openComments: false \r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{ alignItems: 'center' }}>\r\n                <ButtonGroup>\r\n                    <Button onClick={() => this.setState({\r\n                        openMovies:true, \r\n                        openReviews:false,\r\n                        openComments:false\r\n                        })}>\r\n                        My Movies</Button>\r\n                    <Button onClick={() => this.setState({\r\n                        openMovies:false, \r\n                        openReviews:true,\r\n                        openComments:false\r\n                        })}>My Reviews</Button>\r\n                    <Button onClick={() => this.setState({\r\n                        openMovies:false, \r\n                        openReviews:false,\r\n                        openComments:true\r\n                        })}>My Comments</Button>\r\n                </ButtonGroup>\r\n\r\n            {this.state.openMovies ? <MyMovies\r\n            // myMovies={this.state.myMovies}\r\n            // fetchMyMovies={this.fetchMyMovies}\r\n            sessionToken={this.props.sessionToken}\r\n            userId={this.props.userId}\r\n             /> : <></>}\r\n\r\n            {this.state.openReviews ? <MyReviews\r\n            // myReviews={this.state.myReviews}\r\n            // fetchMyReviews={this.fetchMyReviews}\r\n            sessionToken={this.props.sessionToken}\r\n            userId={this.props.userId}\r\n             /> : <></>}\r\n\r\n            {this.state.openComments ? <MyComments\r\n            // myComments={this.state.myComments}\r\n            // fetchMyComments={this.fetchMyComments}\r\n            sessionToken={this.props.sessionToken}\r\n             /> : <></>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Profile;\r\n\r\n{/* <div>\r\n                    <ButtonGroup>\r\n                        <Button href='/profile/mymovies' onClick={this.fetchMyMovies}>My Movies</Button>\r\n                        <Button href='/myreviews'>My Reviews</Button>\r\n                        <Button href='/mycomments'>My Comments</Button>\r\n                    </ButtonGroup>\r\n            {this.state.myMovies.length > 0 ? (this.state.myMovies?.map(({myMovies}:any,index:number) => (\r\n                    <Grid \r\n                    key={this.state.myMovies.id}                \r\n                    container\r\n                    // spacing={2}\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    xs={4}\r\n                    >\r\n                        <h3>My Movies</h3>\r\n                            <Card>\r\n                                <CardContent>\r\n                                        <h4>Title: {this.state.myMovies[index].title}</h4>\r\n                                    <List>\r\n                                        <li>\r\n                                        Year: {this.state.myMovies[index].year}\r\n                                        </li>\r\n                                        <li>\r\n                                            Duration: {this.state.myMovies[index].duration}\r\n                                        </li>\r\n                                        <li>\r\n                                            Description: {this.state.myMovies[index].description}\r\n                                        </li>\r\n                                    </List>\r\n                                    <CardActions >\r\n                                        <Button startIcon={<EditIcon />}> Edit </Button>\r\n                                        <Button startIcon={<DeleteForeverIcon />}> Delete </Button>\r\n                                    </CardActions>\r\n                                </CardContent>\r\n                            </Card>\r\n                    </Grid>\r\n\r\n            )\r\n            )) : ( <>No Movies!</> )              \r\n            }\r\n            </div> */}","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyMovies.tsx",["165","166","167"],"import React from 'react'\r\n\r\nimport EditMovie from '../movie/EditMovie'\r\nimport DeleteMovie from '../movie/DeleteMovie'\r\n\r\nimport { Button, ButtonGroup, Card, CardActions, CardContent, Grid, List } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\n\r\n\r\ntype MyMoviesProps = {\r\n    // myMovies: any;\r\n    // fetchMyMovies: () => void\r\n    sessionToken: string;\r\n    userId: string\r\n    \r\n}\r\n \r\ntype MyMoviesStates = {\r\n    editMovieOn: boolean\r\n    myMovies: any,\r\n    movieId: number,\r\n    setMovieId: (e:any) => void,\r\n    deleteMovieOn: boolean\r\n}\r\n \r\nclass MyMovies extends React.Component<MyMoviesProps, MyMoviesStates> {\r\n    \r\n    constructor(props: MyMoviesProps) {\r\n        super(props);\r\n        this.state = {\r\n            editMovieOn: false,\r\n            myMovies: '',\r\n            movieId: 0,\r\n            deleteMovieOn: false,\r\n            setMovieId: (e) => {\r\n                this.setState({\r\n                  movieId: e\r\n                })\r\n            },\r\n         };\r\n    }\r\n\r\n componentDidMount() {\r\n    this.fetchMyMovies();\r\n}\r\n\r\nfetchMyMovies = () => {\r\n    console.log(this.props.userId)\r\n    // e.preventDefault()\r\n    fetch(`http://localhost:3500/movie/mymovies/${localStorage.getItem('userId')}`, {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': localStorage.getItem('token')|| ''\r\n                })\r\n            }) .then((movie) => movie.json())\r\n               .then((movieData) => {\r\n                    this.myMoviesResults(movieData)\r\n                    console.log(movieData)\r\n               }) .catch (\r\n                   (err) => console.log(err)\r\n               )\r\n}\r\n\r\nmyMoviesResults = (allMyMovies:[]) => {\r\n    console.log(\"My Movies: \", allMyMovies)\r\n    this.setState({myMovies: allMyMovies})\r\n    // this.setState({openMovies: true})\r\n}\r\n\r\neditMovieOff = () => {\r\n    this.setState({editMovieOn:false})\r\n}\r\n\r\ndeleteMovieOff = () => {\r\n    this.setState({deleteMovieOn:false})\r\n}\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                    <h3>My Movies</h3>\r\n            {this.state.myMovies.length > 0 ? (this.state.myMovies?.map((movies:any,index:number) => (\r\n                    <Grid \r\n                    key={movies.id}                \r\n                    container\r\n                    // spacing={2}\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    xs={4}\r\n                    >\r\n                            <Card \r\n                            onMouseEnter={e => {\r\n                                this.setState({\r\n                                    movieId: movies.id\r\n                                })\r\n                                console.log(this.state.movieId)}}>\r\n                                <CardContent>\r\n                                        <h4>Title: {this.state.myMovies[index].title}</h4>\r\n                                    <List>\r\n                                        <li>\r\n                                        Year: {this.state.myMovies[index].year}\r\n                                        </li>\r\n                                        <li>\r\n                                            Duration: {this.state.myMovies[index].duration}\r\n                                        </li>\r\n                                        <li>\r\n                                            Description: {this.state.myMovies[index].description}\r\n                                        </li>\r\n                                    </List>\r\n                                    <CardActions >\r\n                                        <Button \r\n                                        onClick={() => this.setState({editMovieOn: true})}\r\n                                        startIcon={<EditIcon />}\r\n                                         > Edit </Button>\r\n                                        <Button \r\n                                        onClick={() => this.setState({deleteMovieOn: true})}\r\n                                        startIcon={<DeleteForeverIcon />}> Delete </Button>\r\n                                    </CardActions>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            {this.state.editMovieOn ? \r\n                            <EditMovie\r\n                            editMovieOff={this.editMovieOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyMovies={this.fetchMyMovies}\r\n                            myMovies={this.state.myMovies}\r\n                            movieId={this.state.movieId}\r\n                            /> : <> </>}\r\n\r\n                            {this.state.deleteMovieOn ? \r\n                            <DeleteMovie\r\n                            deleteMovieOff={this.deleteMovieOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyMovies={this.fetchMyMovies}\r\n                            myMovies={this.state.myMovies}\r\n                            movieId={this.state.movieId}\r\n                            /> : <> </>}\r\n                    </Grid>\r\n\r\n            )\r\n            )) : ( <>No Movies!</> )              \r\n            }\r\n\r\n            \r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyMovies;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyComments.tsx",["168"],"import React from 'react'\r\n\r\nimport EditComment from '../comment/EditComment'\r\nimport DeleteComment from '../comment/DeleteComment'\r\n\r\nimport { Button, ButtonGroup, Card, CardActions, CardContent, Grid, List } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\ntype MyCommentsProps = {\r\n    // myComments: any;\r\n    // fetchMyComments: () => void\r\n    sessionToken: string\r\n}\r\n\r\ntype MyCommentsStates = {\r\n    editCommentOn: boolean;\r\n    myComments: any;\r\n    commentId: number;\r\n    deleteCommentOn: boolean\r\n}\r\n\r\nclass MyComments extends React.Component<MyCommentsProps, MyCommentsStates> {\r\n    constructor(props: MyCommentsProps) {\r\n        super(props);\r\n        this.state = {\r\n            editCommentOn: false,\r\n            myComments: [],\r\n            commentId: 0,\r\n            deleteCommentOn: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchMyComments();\r\n    }\r\n\r\n    fetchMyComments = () => {\r\n        console.log()\r\n        fetch(`http://localhost:3500/comment/mycomments/${localStorage.getItem('userId')}`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token') || ''\r\n            })\r\n        }).then((comment) => comment.json())\r\n            .then((commentData) => {\r\n                this.myCommentsResults(commentData)\r\n                console.log(commentData)\r\n            }).catch(\r\n                (err) => console.log(err)\r\n            )\r\n    }\r\n\r\n    myCommentsResults = (allMyComments: []) => {\r\n        console.log(\"My Comments: \", allMyComments)\r\n        this.setState({myComments: allMyComments })\r\n        // this.setState({openComments: true})\r\n    }\r\n\r\n    editCommentOff = () => {\r\n        this.setState({editCommentOn: false})\r\n    }\r\n\r\n    deleteCommentOff = () => {\r\n        this.setState({deleteCommentOn: false})\r\n    }\r\n\r\n    //possibly pass review.title and movie. title in to reference what your editing/deleting\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>My Comments</h3>\r\n                {this.state.myComments.length > 0 ? (this.state.myComments?.map((comments:any, index:number) => (\r\n                    <Grid\r\n                        key={comments.id}\r\n                        container\r\n                        // spacing={2}\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        xs={4}\r\n                    >\r\n\r\n                        <Card\r\n                        onMouseEnter={e => {\r\n                            this.setState({\r\n                                commentId: comments.id\r\n                            })\r\n                            console.log(this.state.commentId)}}>\r\n                            <CardContent>\r\n                                {/* <h4>Comment for Review: {this.props.myComments[index].id}</h4>  */}\r\n                                <List>\r\n                                    <li>\r\n                                        Comment: {this.state.myComments[index].comment}\r\n                                    </li>\r\n                                    <li>\r\n                                        Author: {this.state.myComments[index].author}\r\n                                    </li>\r\n                                </List>\r\n                                <CardActions >\r\n                                    <Button \r\n                                    onClick={() => this.setState({editCommentOn: true})}\r\n                                    startIcon={<EditIcon />}\r\n                                    > Edit </Button>\r\n                                    <Button \r\n                                    onClick={() => this.setState({deleteCommentOn: true})}\r\n                                    startIcon={<DeleteForeverIcon />}\r\n                                    > Delete </Button>\r\n                                </CardActions>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        {this.state.editCommentOn ? \r\n                            <EditComment\r\n                            editCommentOff={this.editCommentOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyComments={this.fetchMyComments}\r\n                            myComments={this.state.myComments}\r\n                            commentId={this.state.commentId}\r\n                            /> : <> </>}\r\n\r\n                            {this.state.deleteCommentOn ? \r\n                            <DeleteComment\r\n                            deleteCommentOff={this.deleteCommentOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyComments={this.fetchMyComments}\r\n                            myComments={this.state.myComments}\r\n                            commentId={this.state.commentId}\r\n                            /> : <> </>}\r\n                    </Grid>\r\n\r\n                )\r\n                )) : (<>No Comments!</>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyComments;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyReviews.tsx",["169"],"import React from 'react'\r\n\r\nimport EditReview from '../review/EditReview'\r\nimport DeleteReview from '../review/DeleteReview'\r\n\r\nimport { Button, ButtonGroup, Card, CardActions, CardContent, Grid, List } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\ntype MyReviewsProps = {\r\n    // myReviews: any;\r\n    // fetchMyReviews: () => void\r\n    sessionToken: string,\r\n    userId: string\r\n}\r\n\r\ntype MyReviewsStates = {\r\n    myReviews: any;\r\n    editReviewOn: boolean;\r\n    reviewId: number;\r\n    deleteReviewOn: boolean\r\n}\r\n\r\nclass MyReviews extends React.Component<MyReviewsProps, MyReviewsStates> {\r\n    constructor(props: MyReviewsProps) {\r\n        super(props);\r\n        this.state = {\r\n            myReviews: [],\r\n            editReviewOn: false,\r\n            reviewId: 0,\r\n            deleteReviewOn: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchMyReviews();\r\n    }\r\n\r\n    fetchMyReviews = () => {\r\n        console.log()\r\n        fetch(`http://localhost:3500/review/myreviews/${localStorage.getItem('userId')}`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token') || ''\r\n            })\r\n        }).then((review) => review.json())\r\n            .then((reviewData) => {\r\n                this.myReviewsResults(\r\n                    reviewData\r\n                )\r\n                console.log(reviewData)\r\n            }).catch(\r\n                (err) => console.log(err)\r\n            )\r\n    }\r\n\r\n    myReviewsResults = (allMyReviews: []) => {\r\n        console.log(\"My Reviews: \", allMyReviews)\r\n        this.setState({myReviews: allMyReviews })\r\n        // this.setState({openReviews: true})\r\n    }\r\n\r\n    editReviewOff = () => {\r\n        this.setState({editReviewOn: false})\r\n    }\r\n\r\n    deleteReviewOff = () => {\r\n        this.setState({deleteReviewOn:false})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>My Reviews</h3>\r\n                {this.state.myReviews.length > 0 ? (this.state.myReviews?.map((reviews:any, index: number) => (\r\n                    <Grid\r\n                        key={reviews.id}\r\n                        container\r\n                        // spacing={2}\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        xs={4}\r\n                    >\r\n                        <Card\r\n                        onMouseEnter={e => {\r\n                            this.setState({\r\n                                reviewId: reviews.id\r\n                            })\r\n                            console.log(this.state.reviewId)}}>\r\n                            <CardContent>\r\n                                <h4>Title: {this.state.myReviews[index].title}</h4>\r\n                                <List>\r\n                                    <li>\r\n                                        Emotion: {this.state.myReviews[index].emotion}\r\n                                    </li>\r\n                                    <li>\r\n                                        Review: {this.state.myReviews[index].review}\r\n                                    </li>\r\n                                    <li>\r\n                                        Author: {this.state.myReviews[index].author}\r\n                                    </li>\r\n                                </List>\r\n                                <CardActions >\r\n                                    <Button\r\n                                    onClick={() => this.setState({editReviewOn: true})}\r\n                                    startIcon={<EditIcon />}\r\n                                    > Edit </Button>\r\n                                    <Button \r\n                                    onClick={() => this.setState({deleteReviewOn: true})}\r\n                                    startIcon={<DeleteForeverIcon />}\r\n                                    > Delete </Button>\r\n                                </CardActions>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        {this.state.editReviewOn ? \r\n                            <EditReview\r\n                            editReviewOff={this.editReviewOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyReviews={this.fetchMyReviews}\r\n                            myReviews={this.state.myReviews}\r\n                            reviewId={this.state.reviewId}\r\n                            /> : <> </>}\r\n\r\n                            {this.state.deleteReviewOn ? \r\n                            <DeleteReview\r\n                            deleteReviewOff={this.deleteReviewOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyReviews={this.fetchMyReviews}\r\n                            myReviews={this.state.myReviews}\r\n                            reviewId={this.state.reviewId}\r\n                            /> : <> </>}   \r\n                    </Grid>\r\n\r\n                )\r\n                )) : (<>No Reviews!</>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyReviews;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\EditMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\EditReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\EditComment.tsx",["170","171","172","173"],"import { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Input, InputLabel, TextField } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\n\r\n\r\ntype editCommentProps = {\r\n    editCommentOff: () => void;\r\n    sessionToken: string;\r\n    fetchMyComments: () => void;\r\n    myComments: any;\r\n    commentId:number\r\n}\r\n \r\ntype editCommentStates = {\r\n    open: boolean;\r\n    comment: string,\r\n    author: string,\r\n    // addComment: boolean,\r\n    // currentComment: any;\r\n    setComment: (e: any) => any;\r\n    setAuthor: (e:any) => any;\r\n}\r\n \r\nclass EditComment extends React.Component<editCommentProps, editCommentStates> {\r\n    constructor(props: editCommentProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: true,\r\n            comment: '',\r\n            author: '',\r\n            // addComment: true,\r\n            // currentComment: '',\r\n            setComment: (e) => {\r\n                this.setState({\r\n                  comment: e\r\n                })\r\n            },\r\n            setAuthor: (e) => {\r\n                this.setState({\r\n                  author: e\r\n                })\r\n            },\r\n        };\r\n    }\r\n\r\n\r\ncomponentDidMount() {\r\n    // this.fetchCurrentComment()\r\n    // console.log(this.props.CommentId)\r\n}\r\n\r\n\r\n\r\n    handleSubmit = (e:any) => {\r\n        \r\n        console.log(this.props.commentId)\r\n        e.preventDefault();\r\n        fetch(`http://localhost:3500/comment/${this.props.commentId}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                comment: {\r\n                    comment: this.state.comment,\r\n                    author: this.state.author,\r\n                }\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.sessionToken\r\n            })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data)\r\n                this.state.setComment('')\r\n                this.state.setAuthor('')\r\n                this.props.fetchMyComments()\r\n                this.handleClose()\r\n    \r\n            })\r\n    }\r\n    \r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n        this.props.editCommentOff()\r\n    }\r\n\r\n    //  fetchCurrentMovie = async () => {\r\n    //     await fetch(`http://localhost:3500/movie/${this.props.movieId}`, {\r\n    //         method: 'GET',\r\n    //         headers: new Headers({\r\n    //             'Content-Type': 'application/json',\r\n    //             'Authorization': this.props.sessionToken\r\n    //         })\r\n    //     }) .then((movie) => movie.json())\r\n    //        .then((movieData) => {\r\n    //             this.setState({\r\n    //                 currentMovie: movieData\r\n    //             })\r\n    //             console.log(movieData)\r\n    //             console.log(this.state.currentMovie.title)\r\n    //             this.setState({open : true})\r\n    //        }) .catch (\r\n    //            (err) => console.log(err)\r\n    //        )\r\n    // }\r\n\r\n\r\n\r\n    // dialogStyle = {\r\n    //     root: {\r\n    //         alignItems:'center'\r\n    //     }\r\n    // }\r\n    render() { \r\n        return (  \r\n            <Dialog open={this.state.open} maxWidth='md' fullWidth >\r\n                <DialogTitle>Edit Your Comment</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField \r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"comment\"\r\n                    label=\"Comment\"\r\n                    // type=\"email\"\r\n                    fullWidth\r\n                    onChange={(e)=> this.state.setComment(e.target.value)}\r\n                      />\r\n                </DialogContent>\r\n                <DialogContent>\r\n                    <TextField \r\n                    \r\n                    margin=\"dense\"\r\n                    id=\"author\"\r\n                    label=\"Your Name\"\r\n                    // type=\"email\"\r\n                    onChange={(e)=> this.state.setAuthor(e.target.value)}\r\n                      />\r\n                </DialogContent>\r\n                \r\n                    <Button onClick={this.handleClose}>Cancel</Button>\r\n                    <Button type='submit' onClick={this.handleSubmit}>Confirm</Button>\r\n                \r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n \r\nexport default EditComment;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\DeleteMovie.tsx",["174"],"import { Button, Dialog, DialogActions, DialogContent, Modal } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\ntype DeleteMovieProps = {\r\n    deleteMovieOff: () => void;\r\n    sessionToken: string;\r\n    fetchMyMovies: () => void;\r\n    myMovies: any;\r\n    movieId: number;\r\n}\r\n\r\ntype DeleteMovieStates = {\r\n    open: boolean;\r\n    \r\n}\r\n \r\nclass DeleteMovie extends React.Component<DeleteMovieProps, DeleteMovieStates> {\r\n    constructor(props: DeleteMovieProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        };\r\n    }\r\n\r\n    handleDelete = (e:any) => {\r\n        fetch(`http://localhost:3500/movie/${this.props.movieId}`,{\r\n        method: 'DELETE',\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': this.props.sessionToken\r\n        })\r\n    })\r\n    .then(response => response.json());\r\n    console.log('Movie was deleted.');\r\n    this.props.deleteMovieOff()\r\n    this.props.fetchMyMovies();\r\n    }   \r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n        this.props.deleteMovieOff()\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <>\r\n            <Dialog open={this.state.open}>\r\n                <DialogContent>Delete this Movie?</DialogContent>\r\n                <DialogActions>\r\n                <Button\r\n                startIcon={<CancelIcon/>}\r\n                onClick={this.handleClose}>Cancel</Button>\r\n                <Button\r\n                startIcon={<DeleteForeverIcon/>}\r\n                onClick={this.handleDelete}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default DeleteMovie;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\DeleteReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\DeleteComment.tsx",["175"],"import { Button, Dialog, DialogActions, DialogContent, Modal } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\ntype DeleteCommentProps = {\r\n    deleteCommentOff: () => void;\r\n    sessionToken: string;\r\n    fetchMyComments: () => void;\r\n    myComments: any;\r\n    commentId: number;\r\n}\r\n\r\ntype DeleteCommentStates = {\r\n    open: boolean;\r\n    \r\n}\r\n \r\nclass DeleteComment extends React.Component<DeleteCommentProps, DeleteCommentStates> {\r\n    constructor(props: DeleteCommentProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        };\r\n    }\r\n\r\n    handleDelete = (e:any) => {\r\n        fetch(`http://localhost:3500/comment/${this.props.commentId}`,{\r\n        method: 'DELETE',\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': this.props.sessionToken\r\n        })\r\n    })\r\n    .then(response => response.json());\r\n    console.log('Comment was deleted.');\r\n    this.props.deleteCommentOff()\r\n    this.props.fetchMyComments();\r\n    }   \r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n        this.props.deleteCommentOff()\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <>\r\n            <Dialog open={this.state.open}>\r\n                <DialogContent>Delete this Comment?</DialogContent>\r\n                <DialogActions>\r\n                <Button\r\n                startIcon={<CancelIcon/>}\r\n                onClick={this.handleClose}>Cancel</Button>\r\n                <Button\r\n                startIcon={<DeleteForeverIcon/>}\r\n                onClick={this.handleDelete}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default DeleteComment;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Admin.tsx",["176","177","178","179","180","181","182","183","184"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\IndividualUser.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\DeleteUser.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\About.tsx",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":14,"column":10,"nodeType":"191","messageId":"192","endLine":14,"endColumn":16},{"ruleId":"189","severity":1,"message":"193","line":14,"column":18,"nodeType":"191","messageId":"192","endLine":14,"endColumn":24},{"ruleId":"189","severity":1,"message":"194","line":14,"column":26,"nodeType":"191","messageId":"192","endLine":14,"endColumn":31},{"ruleId":"195","severity":1,"message":"196","line":17,"column":5,"nodeType":"197","messageId":"198","endLine":20,"endColumn":6},{"ruleId":"199","severity":1,"message":"200","line":39,"column":17,"nodeType":"201","endLine":39,"endColumn":64},{"ruleId":"189","severity":1,"message":"202","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":18},{"ruleId":"189","severity":1,"message":"203","line":3,"column":27,"nodeType":"191","messageId":"192","endLine":3,"endColumn":33},{"ruleId":"189","severity":1,"message":"204","line":2,"column":17,"nodeType":"191","messageId":"192","endLine":2,"endColumn":26},{"ruleId":"189","severity":1,"message":"205","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":128,"column":1,"nodeType":"208","messageId":"209","endLine":152,"endColumn":105},{"ruleId":"185","replacedBy":"210"},{"ruleId":"187","replacedBy":"211"},{"ruleId":"189","severity":1,"message":"212","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":12},{"ruleId":"189","severity":1,"message":"202","line":8,"column":10,"nodeType":"191","messageId":"192","endLine":8,"endColumn":18},{"ruleId":"189","severity":1,"message":"213","line":8,"column":20,"nodeType":"191","messageId":"192","endLine":8,"endColumn":25},{"ruleId":"189","severity":1,"message":"214","line":8,"column":27,"nodeType":"191","messageId":"192","endLine":8,"endColumn":33},{"ruleId":"189","severity":1,"message":"215","line":9,"column":8,"nodeType":"191","messageId":"192","endLine":9,"endColumn":13},{"ruleId":"216","severity":1,"message":"217","line":97,"column":13,"nodeType":"218","messageId":"219","endLine":109,"endColumn":25,"fix":"220"},{"ruleId":"216","severity":1,"message":"221","line":97,"column":13,"nodeType":"218","messageId":"219","endLine":103,"endColumn":21,"fix":"222"},{"ruleId":"206","severity":1,"message":"207","line":91,"column":1,"nodeType":"208","messageId":"209","endLine":133,"endColumn":23},{"ruleId":"189","severity":1,"message":"223","line":6,"column":18,"nodeType":"191","messageId":"192","endLine":6,"endColumn":29},{"ruleId":"216","severity":1,"message":"217","line":52,"column":5,"nodeType":"218","messageId":"219","endLine":62,"endColumn":25,"fix":"224"},{"ruleId":"216","severity":1,"message":"221","line":52,"column":5,"nodeType":"218","messageId":"219","endLine":58,"endColumn":21,"fix":"225"},{"ruleId":"189","severity":1,"message":"223","line":6,"column":18,"nodeType":"191","messageId":"192","endLine":6,"endColumn":29},{"ruleId":"189","severity":1,"message":"223","line":6,"column":18,"nodeType":"191","messageId":"192","endLine":6,"endColumn":29},{"ruleId":"189","severity":1,"message":"226","line":1,"column":26,"nodeType":"191","messageId":"192","endLine":1,"endColumn":39},{"ruleId":"189","severity":1,"message":"227","line":1,"column":69,"nodeType":"191","messageId":"192","endLine":1,"endColumn":80},{"ruleId":"189","severity":1,"message":"228","line":1,"column":82,"nodeType":"191","messageId":"192","endLine":1,"endColumn":87},{"ruleId":"189","severity":1,"message":"229","line":1,"column":89,"nodeType":"191","messageId":"192","endLine":1,"endColumn":99},{"ruleId":"189","severity":1,"message":"194","line":1,"column":56,"nodeType":"191","messageId":"192","endLine":1,"endColumn":61},{"ruleId":"189","severity":1,"message":"194","line":1,"column":56,"nodeType":"191","messageId":"192","endLine":1,"endColumn":61},{"ruleId":"189","severity":1,"message":"230","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":19},{"ruleId":"189","severity":1,"message":"231","line":1,"column":21,"nodeType":"191","messageId":"192","endLine":1,"endColumn":37},{"ruleId":"189","severity":1,"message":"232","line":1,"column":39,"nodeType":"191","messageId":"192","endLine":1,"endColumn":55},{"ruleId":"189","severity":1,"message":"233","line":1,"column":103,"nodeType":"191","messageId":"192","endLine":1,"endColumn":107},{"ruleId":"189","severity":1,"message":"234","line":1,"column":109,"nodeType":"191","messageId":"192","endLine":1,"endColumn":117},{"ruleId":"189","severity":1,"message":"235","line":1,"column":119,"nodeType":"191","messageId":"192","endLine":1,"endColumn":131},{"ruleId":"189","severity":1,"message":"236","line":1,"column":133,"nodeType":"191","messageId":"192","endLine":1,"endColumn":138},{"ruleId":"216","severity":1,"message":"217","line":39,"column":13,"nodeType":"218","messageId":"219","endLine":51,"endColumn":25,"fix":"237"},{"ruleId":"216","severity":1,"message":"221","line":39,"column":13,"nodeType":"218","messageId":"219","endLine":45,"endColumn":21,"fix":"238"},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Dialog' is defined but never used.","'Modal' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'Router' is defined but never used.","'Container' is defined but never used.","'exit' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["239"],["240"],"'Grid' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Admin' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"241","text":"242"},"Unexpected whitespace before property then.",{"range":"243","text":"242"},"'ButtonGroup' is defined but never used.",{"range":"244","text":"242"},{"range":"245","text":"242"},"'DialogActions' is defined but never used.","'FormControl' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'Accordion' is defined but never used.","'AccordionDetails' is defined but never used.","'AccordionSummary' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Paper' is defined but never used.",{"range":"246","text":"242"},{"range":"247","text":"242"},"no-global-assign","no-unsafe-negation",[3148,3150],".",[2912,2914],[1743,1745],[1557,1559],[1481,1483],[1199,1201]]