[{"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\index.tsx":"1","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\reportWebVitals.ts":"2","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\App.tsx":"3","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\HomePage.tsx":"4","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Header.tsx":"5","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Auth.tsx":"6","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Login.tsx":"7","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Signup.tsx":"8","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\theme.tsx":"9","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Footer.tsx":"10","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\SideBar.tsx":"11","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\IndividualMovie.tsx":"12","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\UserHome.tsx":"13","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\AddMovie.tsx":"14","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\AddReview.tsx":"15","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\ViewReviews.tsx":"16","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\AddComment.tsx":"17","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\IndividualReview.tsx":"18","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\ViewComments.tsx":"19","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\Profile.tsx":"20","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyMovies.tsx":"21","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyComments.tsx":"22","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyReviews.tsx":"23","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\EditMovie.tsx":"24","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\EditReview.tsx":"25","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\EditComment.tsx":"26","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\DeleteMovie.tsx":"27","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\DeleteReview.tsx":"28","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\DeleteComment.tsx":"29","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Admin.tsx":"30","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\IndividualUser.tsx":"31","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\DeleteUser.tsx":"32","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\About.tsx":"33"},{"size":500,"mtime":499162500000,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":4333,"mtime":1612302539631,"results":"37","hashOfConfig":"35"},{"size":1076,"mtime":1612300452441,"results":"38","hashOfConfig":"35"},{"size":3457,"mtime":1612314324913,"results":"39","hashOfConfig":"35"},{"size":3729,"mtime":1612279706508,"results":"40","hashOfConfig":"35"},{"size":5054,"mtime":1612301317952,"results":"41","hashOfConfig":"35"},{"size":6876,"mtime":1612311209024,"results":"42","hashOfConfig":"35"},{"size":417,"mtime":1610798911665,"results":"43","hashOfConfig":"35"},{"size":661,"mtime":1612307263889,"results":"44","hashOfConfig":"35"},{"size":1051,"mtime":1611469100519,"results":"45","hashOfConfig":"35"},{"size":2986,"mtime":1611983513342,"results":"46","hashOfConfig":"35"},{"size":5567,"mtime":1612309379417,"results":"47","hashOfConfig":"35"},{"size":4574,"mtime":1612071697955,"results":"48","hashOfConfig":"35"},{"size":5162,"mtime":1611983586250,"results":"49","hashOfConfig":"35"},{"size":6264,"mtime":1612059804160,"results":"50","hashOfConfig":"35"},{"size":3252,"mtime":1611929169546,"results":"51","hashOfConfig":"35"},{"size":1190,"mtime":1611926569604,"results":"52","hashOfConfig":"35"},{"size":5261,"mtime":1612307216368,"results":"53","hashOfConfig":"35"},{"size":4786,"mtime":1612310532133,"results":"54","hashOfConfig":"35"},{"size":5540,"mtime":1612192068497,"results":"55","hashOfConfig":"35"},{"size":5309,"mtime":1612194932556,"results":"56","hashOfConfig":"35"},{"size":5350,"mtime":1612193721017,"results":"57","hashOfConfig":"35"},{"size":5468,"mtime":1612183749806,"results":"58","hashOfConfig":"35"},{"size":5521,"mtime":1612181989078,"results":"59","hashOfConfig":"35"},{"size":3232,"mtime":1612307166418,"results":"60","hashOfConfig":"35"},{"size":1829,"mtime":1612192520013,"results":"61","hashOfConfig":"35"},{"size":1834,"mtime":1612193999302,"results":"62","hashOfConfig":"35"},{"size":1865,"mtime":1612194929947,"results":"63","hashOfConfig":"35"},{"size":2892,"mtime":1612292129759,"results":"64","hashOfConfig":"35"},{"size":2960,"mtime":1612292426746,"results":"65","hashOfConfig":"35"},{"size":1826,"mtime":1612293430749,"results":"66","hashOfConfig":"35"},{"size":1596,"mtime":1612302420766,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"dcdvfl",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\index.tsx",[],["146","147"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\reportWebVitals.ts",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\App.tsx",["148","149","150"],"import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Header from '../src/components/home/Header';\r\n\r\nimport HomePage from './components/home/HomePage';\r\nimport UserHome from './components/home/UserHome'\r\nimport Auth from './auth/Auth';\r\nimport Footer from './components/home/Footer';\r\nimport Profile from './components/profile/Profile'\r\nimport Admin from './components/home/Admin'\r\nimport About from './components/home/About'\r\nimport { Button, Dialog, Modal } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\ntype AppStates = {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  sessionToken: string;\r\n  redirect: null | string;\r\n  redirectValue: string\r\n  userId: string\r\n}\r\n\r\nclass App extends React.Component<{} ,AppStates> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    sessionToken:'',\r\n    redirect: null,\r\n    redirectValue: '',\r\n    userId: ''\r\n    }\r\n    \r\n  }\r\n\r\n\r\nupdateToken = (newToken: string, userId:string) => {\r\n  localStorage.setItem('token', newToken);\r\n  this.setState({ sessionToken: newToken, userId : userId });\r\n  localStorage.setItem('userId', JSON.stringify(userId))\r\n  console.log(newToken, userId);\r\n};\r\n\r\nclearToken = () => {\r\n  localStorage.clear();\r\n  this.setState({ sessionToken: '' });\r\n};\r\n\r\ngetToken = () => {\r\n  if (localStorage.getItem('token')) {\r\n    this.setState({ sessionToken: localStorage.getItem('token') ||''  });\r\n  } else {\r\n    console.log('Login required.')\r\n  }\r\n};\r\n\r\ncomponentDidMount() {\r\n  this.getToken()\r\n}\r\n\r\nredirect = () => {\r\n  this.setState({redirectValue: '/userhome'})\r\n  console.log('Insert Redirect Here!')\r\n  return (\r\n    <>\r\n        <Redirect to = '/banana'/>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n// MAKE AN ADMIN VIA POSTMAN\r\n// WORK ON ADMIN PORTAL\r\n// WORK ON READ ME FILE\r\n// WORK ON HEROKU DEPLOYMENT\r\n\r\n// alert('Silly User! You arent an Admin!')\r\n//     this.setState({redirectValue: '/'})\r\n//      if (this.state.redirectValue){\r\n//       return <Redirect to = {this.state.redirectValue} />\r\n//   }\r\n\r\n\r\n  render() {\r\n    \r\n    return (\r\n\r\n      <div className='app'>\r\n        <div className=\"center\">\r\n        \r\n        <Router>\r\n          \r\n\r\n          <Header \r\n          clearToken={this.clearToken}\r\n          sessionToken={this.state.sessionToken}\r\n          redirectValue={this.state.redirectValue}\r\n          // adminChecker={this.adminChecker}\r\n          />\r\n        \r\n            <Switch>\r\n\r\n              \r\n              <Route exact path ='/userhome'>\r\n                <UserHome \r\n                sessionToken={this.state.sessionToken}\r\n                // adminChecker={this.adminChecker} \r\n                />\r\n              </Route>\r\n\r\n              <Route path = \"/user/\">\r\n                <Auth \r\n                redirectValue={this.state.redirectValue} \r\n                updateToken={this.updateToken} \r\n                redirect={this.redirect}/>\r\n              </Route>\r\n\r\n              <Route exact path=\"/\">\r\n                <HomePage />\r\n              </Route>\r\n              \r\n              <Route exact path=\"/profile\">\r\n                <Profile \r\n                userId={this.state.userId}\r\n                sessionToken={this.state.sessionToken} />\r\n              </Route>\r\n\r\n              <Route exact path=\"/admin\">\r\n                <Admin\r\n                sessionToken={this.state.sessionToken}\r\n                // adminChecker={this.adminChecker}  \r\n                />\r\n              </Route>\r\n\r\n              <Route exact path=\"/about\">\r\n                <About />\r\n              </Route>\r\n\r\n            </Switch>\r\n\r\n          </Router>\r\n\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n    \r\n};\r\n\r\n\r\nexport default App;\r\n\r\n// adminChecker = () => {\r\n//   if (localStorage.getItem('admin')) {\r\n//      this.setState({redirectValue: '/admin'})\r\n//      if (this.state.redirectValue){\r\n//       return <Redirect to = {this.state.redirectValue} />\r\n//   }\r\n//   }\r\n//   else {\r\n//     this.render() {\r\n//     return (\r\n//       <Dialog open={true}>\r\n//         <h3>Silly User! You aren't an Admin!</h3>\r\n//         <Button href='/userhome'>Go Home!</Button>\r\n//       </Dialog>\r\n//     )\r\n//     }\r\n//   }\r\n// }","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\HomePage.tsx",["151","152"],"import React from 'react';\r\n\r\nimport  { Button, Grid } from '@material-ui/core'\r\n\r\nimport image from '../../assets/homeImage.png'\r\n\r\ntype Props = {\r\n    \r\n}\r\n \r\ntype States = {\r\n    \r\n}\r\n\r\n\r\nclass HomePage extends React.Component<Props, States> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n       \r\n    }\r\n\r\n    welcomeStyle = {\r\n        root: {\r\n            display:'flex',\r\n            width: '100vw',\r\n            margin: 'auto',\r\n            height: '100%',\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <Grid \r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            style={this.welcomeStyle.root} \r\n            className='homepage'>\r\n                <h5>Welcome to the HomePage!</h5>\r\n                <img src={image} width='400px' height='300px'/>\r\n                 <br />\r\n                <Button href='/user/login'>Login</Button>\r\n                <br />\r\n                <br />\r\n                <Button href='/user/signup'>Signup</Button>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HomePage;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Header.tsx",["153"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Auth.tsx",["154"],"\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch,  } from 'react-router-dom'\r\n\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\n\r\n\r\ntype AuthProps = {\r\n  updateToken: (newToken:string, userId: string) => void;\r\n  redirect: () => void,\r\n  redirectValue: string,\r\n  // adminChecker: (adminData:string) => void\r\n\r\n}\r\n\r\ntype AuthStates = {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n    sessionToken: any;\r\n    // updateToken: (newToken:string) => void;\r\n    getToken: any;\r\n    setFirstName: (e: any) => any;\r\n    setLastName: (e: any) => any;\r\n    setEmail: (e: any) => any;\r\n    setPassword: (e: any) => any;\r\n}\r\n\r\n\r\n \r\nclass Auth extends React.Component< AuthProps, AuthStates> {\r\n    constructor(props: AuthProps) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            sessionToken: \"\",\r\n            getToken: '',\r\n            setFirstName: (e:any) => {\r\n              this.setState({\r\n                firstName: e\r\n              })\r\n            },\r\n            setLastName: (e:any) => {\r\n              this.setState({\r\n                lastName: e\r\n              })\r\n            },\r\n            setEmail: (e:any) => {\r\n              this.setState({\r\n                email: e\r\n              })\r\n            },\r\n            setPassword: (e:any) => {\r\n              this.setState({\r\n                password: e\r\n              })\r\n            },\r\n           \r\n          }\r\n        };\r\n\r\n       \r\n\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                \r\n                    <Switch>\r\n                        <Route exaxt path='/user/login'>\r\n                            <Login \r\n                            email = {this.state.email}\r\n                            password = {this.state.password}\r\n                            setEmail = {this.state.setEmail}\r\n                            setPassword = {this.state.setPassword}\r\n                            sessionToken = {this.state.sessionToken}\r\n                            getToken={this.state.getToken}\r\n                            updateToken = {this.props.updateToken}\r\n                            redirect = {this.props.redirect}\r\n                            redirectValue={this.props.redirectValue}\r\n                            // adminChecker={this.props.adminChecker}\r\n                            />\r\n                        </Route>\r\n                    {/* </Switch>\r\n                </Router>\r\n                <Router>\r\n                    <Switch> */}\r\n                        <Route exact path='/user/signup'>\r\n                            <Signup \r\n                            firstName = {this.state.firstName}\r\n                            lastName = {this.state.lastName}\r\n                            email = {this.state.email}\r\n                            password = {this.state.password}\r\n                            setFirstName = {this.state.setFirstName}\r\n                            setLastName = {this.state.setLastName}\r\n                            setEmail = {this.state.setEmail}\r\n                            setPassword = {this.state.setPassword}\r\n                            sessionToken = {this.state.sessionToken}\r\n                            updateToken = {this.props.updateToken}\r\n                            redirect = {this.props.redirect}\r\n                            redirectValue = {this.props.redirectValue}\r\n                            \r\n                            />\r\n                        </Route>\r\n                    </Switch>\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Auth;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Login.tsx",["155","156","157"],"import React from 'react'\r\nimport {Button, Container, Grid, TextField} from '@material-ui/core';\r\n\r\nimport { Redirect, } from 'react-router-dom'\r\nimport { exit } from 'process';\r\n\r\ntype LoginProps = {\r\n    email: string;\r\n    password: string;\r\n    updateToken: (newToken:string, userId:string) => void;\r\n    sessionToken: any;\r\n    getToken: any;\r\n    setEmail: (e: any) => any;\r\n    setPassword: (e: any) => any;\r\n    redirect: () => void\r\n    redirectValue: string;\r\n}\r\n\r\ntype LoginStates = {\r\n    hidden: boolean\r\n    redirectValue: null|string\r\n}\r\n\r\n \r\nclass Login extends React.Component<LoginProps, LoginStates > {\r\n    constructor(props: LoginProps) {\r\n        super(props);\r\n        this.state = {\r\n            redirectValue: null,\r\n            hidden: true\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event:any) => {\r\n        event.preventDefault();\r\n        fetch('http://localhost:3500/user/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                user: {\r\n                    email: this.props.email,\r\n                    password: this.props.password\r\n                }\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n            // .then((res) => res.json())\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                  console.log(\"Login successful.\")\r\n                  \r\n                } else {\r\n                  console.log(\"Login failed.\");\r\n                \r\n                }\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                this.props.updateToken(data.sessionToken, data.user.id)\r\n                console.log(data.sessionToken)\r\n                if (data.user.admin === true){\r\n                    localStorage.setItem('admin', 'true')\r\n                }\r\n                this.setState({redirectValue: '/userhome'})\r\n                \r\n            })\r\n    }\r\n\r\n    welcomeStyle = {\r\n        root: {\r\n            display:'flex',\r\n            width: '100vw',\r\n            margin: 'auto',\r\n            height: '100%',\r\n        }\r\n    }\r\n\r\n    render() { \r\n        if (this.state.redirectValue){\r\n            return <Redirect to = {this.state.redirectValue} />\r\n        }\r\n        return (\r\n            <Grid \r\n            style={this.welcomeStyle.root}\r\n            className='homepage'\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            >\r\n                \r\n                \r\n                <h3>Login</h3>\r\n                \r\n                <form onSubmit = {this.handleSubmit}>\r\n               \r\n                <br />\r\n                <TextField \r\n                label=\"email\"\r\n                id=\"email\"  \r\n                className='email'\r\n                onChange={(e) => this.props.setEmail(e.target.value)} \r\n                value={this.props.email}/>\r\n\r\n                <br />\r\n                \r\n                <br />\r\n                <TextField\r\n                    label=\"password\" \r\n                    id=\"password\" \r\n                    type={this.state.hidden ? 'password' : 'text'}\r\n                    className='password' \r\n                    onChange={(e) => this.props.setPassword(e.target.value)} \r\n                    value={this.props.password}/>\r\n                    {/* <Button onClick={(e) => this.toggleShow}>Show / Hide</Button> */}\r\n                <br />\r\n                <br/>\r\n                <Button type=\"submit\" value=\"Submit\"> Submit</Button>\r\n                </form> \r\n                \r\n                \r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Login;\r\n\r\n{/* <FormControl onSubmit={this.handleSubmit}>\r\n                        <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n                        <Input \r\n                        id=\"email\" \r\n                        aria-describedby=\"my-helper-text\" \r\n                        className='email' \r\n                        onChange={(e) => this.props.setEmail(e.target.value)} \r\n                        value={this.props.email} />\r\n                        <FormHelperText id=\"my-helper-text\">We'll never share your email.\r\n                        </FormHelperText>\r\n                    </FormControl >\r\n                    <br />\r\n                    <FormControl onSubmit={this.handleSubmit}>\r\n                        <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                        <Input \r\n                        id=\"password\" \r\n                        aria-describedby=\"my-helper-text\" \r\n                        className='password' \r\n                        onChange={(e) => this.props.setPassword(e.target.value)} \r\n                        value={this.props.password} />\r\n                        <FormHelperText id=\"my-helper-text\"> Don't forget this!\r\n                        </FormHelperText>\r\n                    </FormControl>\r\n                        <br />\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" >Signup</Button> */}","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Signup.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\theme.tsx",[],["158","159"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Footer.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\SideBar.tsx",["160"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\IndividualMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\UserHome.tsx",["161","162","163","164","165","166"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\AddMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\AddReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\ViewReviews.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\AddComment.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\IndividualReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\ViewComments.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\Profile.tsx",["167"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyMovies.tsx",["168","169","170"],"import React from 'react'\r\n\r\nimport EditMovie from '../movie/EditMovie'\r\nimport DeleteMovie from '../movie/DeleteMovie'\r\n\r\nimport { Button, ButtonGroup, Card, CardActions, CardContent, Grid, List } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\n\r\n\r\ntype MyMoviesProps = {\r\n    // myMovies: any;\r\n    // fetchMyMovies: () => void\r\n    sessionToken: string;\r\n    userId: string\r\n    \r\n}\r\n \r\ntype MyMoviesStates = {\r\n    editMovieOn: boolean\r\n    myMovies: any,\r\n    movieId: number,\r\n    setMovieId: (e:any) => void,\r\n    deleteMovieOn: boolean\r\n}\r\n \r\nclass MyMovies extends React.Component<MyMoviesProps, MyMoviesStates> {\r\n    \r\n    constructor(props: MyMoviesProps) {\r\n        super(props);\r\n        this.state = {\r\n            editMovieOn: false,\r\n            myMovies: '',\r\n            movieId: 0,\r\n            deleteMovieOn: false,\r\n            setMovieId: (e) => {\r\n                this.setState({\r\n                  movieId: e\r\n                })\r\n            },\r\n         };\r\n    }\r\n\r\n componentDidMount() {\r\n    this.fetchMyMovies();\r\n}\r\n\r\nfetchMyMovies = () => {\r\n    console.log(this.props.userId)\r\n    // e.preventDefault()\r\n    fetch(`http://localhost:3500/movie/mymovies/${localStorage.getItem('userId')}`, {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': localStorage.getItem('token')|| ''\r\n                })\r\n            }) .then((movie) => movie.json())\r\n               .then((movieData) => {\r\n                    this.myMoviesResults(movieData)\r\n                    console.log(movieData)\r\n               }) .catch (\r\n                   (err) => console.log(err)\r\n               )\r\n}\r\n\r\nmyMoviesResults = (allMyMovies:[]) => {\r\n    console.log(\"My Movies: \", allMyMovies)\r\n    this.setState({myMovies: allMyMovies})\r\n    // this.setState({openMovies: true})\r\n}\r\n\r\neditMovieOff = () => {\r\n    this.setState({editMovieOn:false})\r\n}\r\n\r\ndeleteMovieOff = () => {\r\n    this.setState({deleteMovieOn:false})\r\n}\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                    <h3>My Movies</h3>\r\n            {this.state.myMovies.length > 0 ? (this.state.myMovies?.map((movies:any,index:number) => (\r\n                    <Grid \r\n                    key={movies.id}                \r\n                    container\r\n                    // spacing={2}\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    xs={4}\r\n                    >\r\n                            <Card \r\n                            onMouseEnter={e => {\r\n                                this.setState({\r\n                                    movieId: movies.id\r\n                                })\r\n                                console.log(this.state.movieId)}}>\r\n                                <CardContent>\r\n                                        <h4>Title: {this.state.myMovies[index].title}</h4>\r\n                                    <List>\r\n                                        <li>\r\n                                        Year: {this.state.myMovies[index].year}\r\n                                        </li>\r\n                                        <li>\r\n                                            Duration: {this.state.myMovies[index].duration}\r\n                                        </li>\r\n                                        <li>\r\n                                            Description: {this.state.myMovies[index].description}\r\n                                        </li>\r\n                                    </List>\r\n                                    <CardActions >\r\n                                        <Button \r\n                                        onClick={() => this.setState({editMovieOn: true})}\r\n                                        startIcon={<EditIcon />}\r\n                                         > Edit </Button>\r\n                                        <Button \r\n                                        onClick={() => this.setState({deleteMovieOn: true})}\r\n                                        startIcon={<DeleteForeverIcon />}> Delete </Button>\r\n                                    </CardActions>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            {this.state.editMovieOn ? \r\n                            <EditMovie\r\n                            editMovieOff={this.editMovieOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyMovies={this.fetchMyMovies}\r\n                            myMovies={this.state.myMovies}\r\n                            movieId={this.state.movieId}\r\n                            /> : <> </>}\r\n\r\n                            {this.state.deleteMovieOn ? \r\n                            <DeleteMovie\r\n                            deleteMovieOff={this.deleteMovieOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyMovies={this.fetchMyMovies}\r\n                            myMovies={this.state.myMovies}\r\n                            movieId={this.state.movieId}\r\n                            /> : <> </>}\r\n                    </Grid>\r\n\r\n            )\r\n            )) : ( <>No Movies!</> )              \r\n            }\r\n\r\n            \r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyMovies;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyComments.tsx",["171"],"import React from 'react'\r\n\r\nimport EditComment from '../comment/EditComment'\r\nimport DeleteComment from '../comment/DeleteComment'\r\n\r\nimport { Button, ButtonGroup, Card, CardActions, CardContent, Grid, List } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\ntype MyCommentsProps = {\r\n    // myComments: any;\r\n    // fetchMyComments: () => void\r\n    sessionToken: string\r\n}\r\n\r\ntype MyCommentsStates = {\r\n    editCommentOn: boolean;\r\n    myComments: any;\r\n    commentId: number;\r\n    deleteCommentOn: boolean\r\n}\r\n\r\nclass MyComments extends React.Component<MyCommentsProps, MyCommentsStates> {\r\n    constructor(props: MyCommentsProps) {\r\n        super(props);\r\n        this.state = {\r\n            editCommentOn: false,\r\n            myComments: [],\r\n            commentId: 0,\r\n            deleteCommentOn: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchMyComments();\r\n    }\r\n\r\n    fetchMyComments = () => {\r\n        console.log()\r\n        fetch(`http://localhost:3500/comment/mycomments/${localStorage.getItem('userId')}`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token') || ''\r\n            })\r\n        }).then((comment) => comment.json())\r\n            .then((commentData) => {\r\n                this.myCommentsResults(commentData)\r\n                console.log(commentData)\r\n            }).catch(\r\n                (err) => console.log(err)\r\n            )\r\n    }\r\n\r\n    myCommentsResults = (allMyComments: []) => {\r\n        console.log(\"My Comments: \", allMyComments)\r\n        this.setState({myComments: allMyComments })\r\n        // this.setState({openComments: true})\r\n    }\r\n\r\n    editCommentOff = () => {\r\n        this.setState({editCommentOn: false})\r\n    }\r\n\r\n    deleteCommentOff = () => {\r\n        this.setState({deleteCommentOn: false})\r\n    }\r\n\r\n    //possibly pass review.title and movie. title in to reference what your editing/deleting\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>My Comments</h3>\r\n                {this.state.myComments.length > 0 ? (this.state.myComments?.map((comments:any, index:number) => (\r\n                    <Grid\r\n                        key={comments.id}\r\n                        container\r\n                        // spacing={2}\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        xs={4}\r\n                    >\r\n\r\n                        <Card\r\n                        onMouseEnter={e => {\r\n                            this.setState({\r\n                                commentId: comments.id\r\n                            })\r\n                            console.log(this.state.commentId)}}>\r\n                            <CardContent>\r\n                                {/* <h4>Comment for Review: {this.props.myComments[index].id}</h4>  */}\r\n                                <List>\r\n                                    <li>\r\n                                        Comment: {this.state.myComments[index].comment}\r\n                                    </li>\r\n                                    <li>\r\n                                        Author: {this.state.myComments[index].author}\r\n                                    </li>\r\n                                </List>\r\n                                <CardActions >\r\n                                    <Button \r\n                                    onClick={() => this.setState({editCommentOn: true})}\r\n                                    startIcon={<EditIcon />}\r\n                                    > Edit </Button>\r\n                                    <Button \r\n                                    onClick={() => this.setState({deleteCommentOn: true})}\r\n                                    startIcon={<DeleteForeverIcon />}\r\n                                    > Delete </Button>\r\n                                </CardActions>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        {this.state.editCommentOn ? \r\n                            <EditComment\r\n                            editCommentOff={this.editCommentOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyComments={this.fetchMyComments}\r\n                            myComments={this.state.myComments}\r\n                            commentId={this.state.commentId}\r\n                            /> : <> </>}\r\n\r\n                            {this.state.deleteCommentOn ? \r\n                            <DeleteComment\r\n                            deleteCommentOff={this.deleteCommentOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyComments={this.fetchMyComments}\r\n                            myComments={this.state.myComments}\r\n                            commentId={this.state.commentId}\r\n                            /> : <> </>}\r\n                    </Grid>\r\n\r\n                )\r\n                )) : (<>No Comments!</>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyComments;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyReviews.tsx",["172"],"import React from 'react'\r\n\r\nimport EditReview from '../review/EditReview'\r\nimport DeleteReview from '../review/DeleteReview'\r\n\r\nimport { Button, ButtonGroup, Card, CardActions, CardContent, Grid, List } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\ntype MyReviewsProps = {\r\n    // myReviews: any;\r\n    // fetchMyReviews: () => void\r\n    sessionToken: string,\r\n    userId: string\r\n}\r\n\r\ntype MyReviewsStates = {\r\n    myReviews: any;\r\n    editReviewOn: boolean;\r\n    reviewId: number;\r\n    deleteReviewOn: boolean\r\n}\r\n\r\nclass MyReviews extends React.Component<MyReviewsProps, MyReviewsStates> {\r\n    constructor(props: MyReviewsProps) {\r\n        super(props);\r\n        this.state = {\r\n            myReviews: [],\r\n            editReviewOn: false,\r\n            reviewId: 0,\r\n            deleteReviewOn: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchMyReviews();\r\n    }\r\n\r\n    fetchMyReviews = () => {\r\n        console.log()\r\n        fetch(`http://localhost:3500/review/myreviews/${localStorage.getItem('userId')}`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token') || ''\r\n            })\r\n        }).then((review) => review.json())\r\n            .then((reviewData) => {\r\n                this.myReviewsResults(\r\n                    reviewData\r\n                )\r\n                console.log(reviewData)\r\n            }).catch(\r\n                (err) => console.log(err)\r\n            )\r\n    }\r\n\r\n    myReviewsResults = (allMyReviews: []) => {\r\n        console.log(\"My Reviews: \", allMyReviews)\r\n        this.setState({myReviews: allMyReviews })\r\n        // this.setState({openReviews: true})\r\n    }\r\n\r\n    editReviewOff = () => {\r\n        this.setState({editReviewOn: false})\r\n    }\r\n\r\n    deleteReviewOff = () => {\r\n        this.setState({deleteReviewOn:false})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>My Reviews</h3>\r\n                {this.state.myReviews.length > 0 ? (this.state.myReviews?.map((reviews:any, index: number) => (\r\n                    <Grid\r\n                        key={reviews.id}\r\n                        container\r\n                        // spacing={2}\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        xs={4}\r\n                    >\r\n                        <Card\r\n                        onMouseEnter={e => {\r\n                            this.setState({\r\n                                reviewId: reviews.id\r\n                            })\r\n                            console.log(this.state.reviewId)}}>\r\n                            <CardContent>\r\n                                <h4>Title: {this.state.myReviews[index].title}</h4>\r\n                                <List>\r\n                                    <li>\r\n                                        Emotion: {this.state.myReviews[index].emotion}\r\n                                    </li>\r\n                                    <li>\r\n                                        Review: {this.state.myReviews[index].review}\r\n                                    </li>\r\n                                    <li>\r\n                                        Author: {this.state.myReviews[index].author}\r\n                                    </li>\r\n                                </List>\r\n                                <CardActions >\r\n                                    <Button\r\n                                    onClick={() => this.setState({editReviewOn: true})}\r\n                                    startIcon={<EditIcon />}\r\n                                    > Edit </Button>\r\n                                    <Button \r\n                                    onClick={() => this.setState({deleteReviewOn: true})}\r\n                                    startIcon={<DeleteForeverIcon />}\r\n                                    > Delete </Button>\r\n                                </CardActions>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        {this.state.editReviewOn ? \r\n                            <EditReview\r\n                            editReviewOff={this.editReviewOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyReviews={this.fetchMyReviews}\r\n                            myReviews={this.state.myReviews}\r\n                            reviewId={this.state.reviewId}\r\n                            /> : <> </>}\r\n\r\n                            {this.state.deleteReviewOn ? \r\n                            <DeleteReview\r\n                            deleteReviewOff={this.deleteReviewOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyReviews={this.fetchMyReviews}\r\n                            myReviews={this.state.myReviews}\r\n                            reviewId={this.state.reviewId}\r\n                            /> : <> </>}   \r\n                    </Grid>\r\n\r\n                )\r\n                )) : (<>No Reviews!</>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyReviews;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\EditMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\EditReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\EditComment.tsx",["173","174","175","176"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\DeleteMovie.tsx",["177"],"import { Button, Dialog, DialogActions, DialogContent, Modal } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\ntype DeleteMovieProps = {\r\n    deleteMovieOff: () => void;\r\n    sessionToken: string;\r\n    fetchMyMovies: () => void;\r\n    myMovies: any;\r\n    movieId: number;\r\n}\r\n\r\ntype DeleteMovieStates = {\r\n    open: boolean;\r\n    \r\n}\r\n \r\nclass DeleteMovie extends React.Component<DeleteMovieProps, DeleteMovieStates> {\r\n    constructor(props: DeleteMovieProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        };\r\n    }\r\n\r\n    handleDelete = (e:any) => {\r\n        fetch(`http://localhost:3500/movie/${this.props.movieId}`,{\r\n        method: 'DELETE',\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': this.props.sessionToken\r\n        })\r\n    })\r\n    .then(response => response.json());\r\n    console.log('Movie was deleted.');\r\n    this.props.deleteMovieOff()\r\n    this.props.fetchMyMovies();\r\n    }   \r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n        this.props.deleteMovieOff()\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <>\r\n            <Dialog open={this.state.open}>\r\n                <DialogContent>Delete this Movie?</DialogContent>\r\n                <DialogActions>\r\n                <Button\r\n                startIcon={<CancelIcon/>}\r\n                onClick={this.handleClose}>Cancel</Button>\r\n                <Button\r\n                startIcon={<DeleteForeverIcon/>}\r\n                onClick={this.handleDelete}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default DeleteMovie;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\DeleteReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\DeleteComment.tsx",["178"],"import { Button, Dialog, DialogActions, DialogContent, Modal } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\ntype DeleteCommentProps = {\r\n    deleteCommentOff: () => void;\r\n    sessionToken: string;\r\n    fetchMyComments: () => void;\r\n    myComments: any;\r\n    commentId: number;\r\n}\r\n\r\ntype DeleteCommentStates = {\r\n    open: boolean;\r\n    \r\n}\r\n \r\nclass DeleteComment extends React.Component<DeleteCommentProps, DeleteCommentStates> {\r\n    constructor(props: DeleteCommentProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        };\r\n    }\r\n\r\n    handleDelete = (e:any) => {\r\n        fetch(`http://localhost:3500/comment/${this.props.commentId}`,{\r\n        method: 'DELETE',\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': this.props.sessionToken\r\n        })\r\n    })\r\n    .then(response => response.json());\r\n    console.log('Comment was deleted.');\r\n    this.props.deleteCommentOff()\r\n    this.props.fetchMyComments();\r\n    }   \r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n        this.props.deleteCommentOff()\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <>\r\n            <Dialog open={this.state.open}>\r\n                <DialogContent>Delete this Comment?</DialogContent>\r\n                <DialogActions>\r\n                <Button\r\n                startIcon={<CancelIcon/>}\r\n                onClick={this.handleClose}>Cancel</Button>\r\n                <Button\r\n                startIcon={<DeleteForeverIcon/>}\r\n                onClick={this.handleDelete}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default DeleteComment;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Admin.tsx",["179","180","181","182","183","184","185","186","187"],"import { Accordion, AccordionDetails, AccordionSummary, Button, Dialog, DialogActions, DialogContent, List, ListItem, ListItemText, Paper } from '@material-ui/core';\r\nimport React from 'react'\r\nimport IndividualUser from './IndividualUser';\r\n\r\n\r\ntype AdminProps = {\r\n    sessionToken: string\r\n    \r\n}\r\n \r\ntype AdminStates = {\r\n    adminCheck: boolean;\r\n    open: boolean;\r\n    users: any\r\n}\r\n \r\nclass Admin extends React.Component<AdminProps, AdminStates> {\r\n    constructor(props: AdminProps) {\r\n        super(props);\r\n        this.state = {\r\n            adminCheck: false,\r\n            open: false,\r\n            users: []\r\n         };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.adminChecker()\r\n    }\r\n\r\n    adminChecker = () => {\r\n        if (localStorage.getItem('admin')) {\r\n         this.fetchUsers()\r\n         this.setState({adminCheck: true})\r\n        }\r\n    }\r\n\r\n        fetchUsers = () => {\r\n            fetch('http://localhost:3500/user/all', {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': localStorage.getItem('token')|| ''\r\n                })\r\n            }) .then((users) => users.json())\r\n               .then((userData) => {\r\n                    // this.setState({users: userData})\r\n                    this.allUsersResults(userData)\r\n                    console.log(userData)\r\n                    // this.userMapper()\r\n               }) .catch (\r\n                   (err) => console.log(err)\r\n               )\r\n        }\r\n\r\n        allUsersResults = (allUsers: []) => {\r\n            console.log(\"All Users: \", allUsers)\r\n            this.setState({users: allUsers })\r\n            // this.setState({openComments: true})\r\n        }\r\n\r\n        userMapper = () => {\r\n            // console.log(this.state.users)\r\n             return this.state.users?.map((users:any, index:number) => {\r\n                return (\r\n                    <>\r\n                        <IndividualUser \r\n                        users={users} \r\n                        key={users.id}\r\n                        fetchUsers={this.fetchUsers}\r\n                        sessionToken={this.props.sessionToken} />\r\n                    </>\r\n                    \r\n                )\r\n            })\r\n        }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n            {this.state.adminCheck ? \r\n                \r\n            <div>\r\n                <h3>All Users</h3>\r\n\r\n                {this.userMapper()}\r\n            </div>\r\n            : \r\n            <>\r\n            <Dialog open={true}>\r\n                <DialogContent>Silly User! You aren't an Admin!</DialogContent>\r\n                <DialogActions><Button href=\"/userhome\">Go Home!</Button></DialogActions>\r\n            </Dialog>\r\n            </>}\r\n        \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Admin;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\IndividualUser.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\DeleteUser.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\About.tsx",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":14,"column":10,"nodeType":"194","messageId":"195","endLine":14,"endColumn":16},{"ruleId":"192","severity":1,"message":"196","line":14,"column":18,"nodeType":"194","messageId":"195","endLine":14,"endColumn":24},{"ruleId":"192","severity":1,"message":"197","line":14,"column":26,"nodeType":"194","messageId":"195","endLine":14,"endColumn":31},{"ruleId":"198","severity":1,"message":"199","line":17,"column":5,"nodeType":"200","messageId":"201","endLine":20,"endColumn":6},{"ruleId":"202","severity":1,"message":"203","line":39,"column":17,"nodeType":"204","endLine":39,"endColumn":64},{"ruleId":"192","severity":1,"message":"205","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":18},{"ruleId":"192","severity":1,"message":"206","line":3,"column":27,"nodeType":"194","messageId":"195","endLine":3,"endColumn":33},{"ruleId":"192","severity":1,"message":"207","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":26},{"ruleId":"192","severity":1,"message":"208","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":14},{"ruleId":"209","severity":1,"message":"210","line":128,"column":1,"nodeType":"211","messageId":"212","endLine":152,"endColumn":105},{"ruleId":"188","replacedBy":"213"},{"ruleId":"190","replacedBy":"214"},{"ruleId":"192","severity":1,"message":"215","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":12},{"ruleId":"192","severity":1,"message":"205","line":8,"column":10,"nodeType":"194","messageId":"195","endLine":8,"endColumn":18},{"ruleId":"192","severity":1,"message":"216","line":8,"column":20,"nodeType":"194","messageId":"195","endLine":8,"endColumn":25},{"ruleId":"192","severity":1,"message":"217","line":8,"column":27,"nodeType":"194","messageId":"195","endLine":8,"endColumn":33},{"ruleId":"192","severity":1,"message":"218","line":9,"column":8,"nodeType":"194","messageId":"195","endLine":9,"endColumn":13},{"ruleId":"219","severity":1,"message":"220","line":97,"column":13,"nodeType":"221","messageId":"222","endLine":109,"endColumn":25,"fix":"223"},{"ruleId":"219","severity":1,"message":"224","line":97,"column":13,"nodeType":"221","messageId":"222","endLine":103,"endColumn":21,"fix":"225"},{"ruleId":"209","severity":1,"message":"210","line":100,"column":1,"nodeType":"211","messageId":"212","endLine":142,"endColumn":23},{"ruleId":"192","severity":1,"message":"226","line":6,"column":18,"nodeType":"194","messageId":"195","endLine":6,"endColumn":29},{"ruleId":"219","severity":1,"message":"220","line":52,"column":5,"nodeType":"221","messageId":"222","endLine":62,"endColumn":25,"fix":"227"},{"ruleId":"219","severity":1,"message":"224","line":52,"column":5,"nodeType":"221","messageId":"222","endLine":58,"endColumn":21,"fix":"228"},{"ruleId":"192","severity":1,"message":"226","line":6,"column":18,"nodeType":"194","messageId":"195","endLine":6,"endColumn":29},{"ruleId":"192","severity":1,"message":"226","line":6,"column":18,"nodeType":"194","messageId":"195","endLine":6,"endColumn":29},{"ruleId":"192","severity":1,"message":"229","line":1,"column":26,"nodeType":"194","messageId":"195","endLine":1,"endColumn":39},{"ruleId":"192","severity":1,"message":"230","line":1,"column":69,"nodeType":"194","messageId":"195","endLine":1,"endColumn":80},{"ruleId":"192","severity":1,"message":"231","line":1,"column":82,"nodeType":"194","messageId":"195","endLine":1,"endColumn":87},{"ruleId":"192","severity":1,"message":"232","line":1,"column":89,"nodeType":"194","messageId":"195","endLine":1,"endColumn":99},{"ruleId":"192","severity":1,"message":"197","line":1,"column":56,"nodeType":"194","messageId":"195","endLine":1,"endColumn":61},{"ruleId":"192","severity":1,"message":"197","line":1,"column":56,"nodeType":"194","messageId":"195","endLine":1,"endColumn":61},{"ruleId":"192","severity":1,"message":"233","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":19},{"ruleId":"192","severity":1,"message":"234","line":1,"column":21,"nodeType":"194","messageId":"195","endLine":1,"endColumn":37},{"ruleId":"192","severity":1,"message":"235","line":1,"column":39,"nodeType":"194","messageId":"195","endLine":1,"endColumn":55},{"ruleId":"192","severity":1,"message":"236","line":1,"column":103,"nodeType":"194","messageId":"195","endLine":1,"endColumn":107},{"ruleId":"192","severity":1,"message":"237","line":1,"column":109,"nodeType":"194","messageId":"195","endLine":1,"endColumn":117},{"ruleId":"192","severity":1,"message":"238","line":1,"column":119,"nodeType":"194","messageId":"195","endLine":1,"endColumn":131},{"ruleId":"192","severity":1,"message":"239","line":1,"column":133,"nodeType":"194","messageId":"195","endLine":1,"endColumn":138},{"ruleId":"219","severity":1,"message":"220","line":39,"column":13,"nodeType":"221","messageId":"222","endLine":51,"endColumn":25,"fix":"240"},{"ruleId":"219","severity":1,"message":"224","line":39,"column":13,"nodeType":"221","messageId":"222","endLine":45,"endColumn":21,"fix":"241"},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Dialog' is defined but never used.","'Modal' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'Router' is defined but never used.","'Container' is defined but never used.","'exit' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["242"],["243"],"'Grid' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Admin' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"244","text":"245"},"Unexpected whitespace before property then.",{"range":"246","text":"245"},"'ButtonGroup' is defined but never used.",{"range":"247","text":"245"},{"range":"248","text":"245"},"'DialogActions' is defined but never used.","'FormControl' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'Accordion' is defined but never used.","'AccordionDetails' is defined but never used.","'AccordionSummary' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Paper' is defined but never used.",{"range":"249","text":"245"},{"range":"250","text":"245"},"no-global-assign","no-unsafe-negation",[3148,3150],".",[2912,2914],[1743,1745],[1557,1559],[1481,1483],[1199,1201]]