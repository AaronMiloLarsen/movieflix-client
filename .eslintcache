[{"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\index.tsx":"1","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\reportWebVitals.ts":"2","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\App.tsx":"3","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\HomePage.tsx":"4","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Header.tsx":"5","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Auth.tsx":"6","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Login.tsx":"7","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Signup.tsx":"8","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\theme.tsx":"9","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Footer.tsx":"10","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\SideBar.tsx":"11","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\IndividualMovie.tsx":"12","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\UserHome.tsx":"13","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\AddMovie.tsx":"14","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\AddReview.tsx":"15","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\ViewReviews.tsx":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":2764,"mtime":1611784594931,"results":"20","hashOfConfig":"18"},{"size":938,"mtime":1611717313257,"results":"21","hashOfConfig":"18"},{"size":565,"mtime":1611717313256,"results":"22","hashOfConfig":"18"},{"size":3570,"mtime":1611806858362,"results":"23","hashOfConfig":"18"},{"size":4779,"mtime":1611784594934,"results":"24","hashOfConfig":"18"},{"size":6660,"mtime":1611806932062,"results":"25","hashOfConfig":"18"},{"size":417,"mtime":1610798911665,"results":"26","hashOfConfig":"18"},{"size":738,"mtime":1611717313256,"results":"27","hashOfConfig":"18"},{"size":1051,"mtime":1611469100519,"results":"28","hashOfConfig":"18"},{"size":3076,"mtime":1611904721840,"results":"29","hashOfConfig":"18"},{"size":5708,"mtime":1611904845042,"results":"30","hashOfConfig":"18"},{"size":4664,"mtime":1611832663557,"results":"31","hashOfConfig":"18"},{"size":5161,"mtime":1611886432150,"results":"32","hashOfConfig":"18"},{"size":4098,"mtime":1611905996907,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"dcdvfl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":2,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"36"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\index.tsx",[],["77","78"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\reportWebVitals.ts",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\App.tsx",["79","80"],"import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Header from '../src/components/home/Header';\r\nimport SideBar from './components/home/SideBar'\r\nimport HomePage from './components/home/HomePage';\r\nimport UserHome from './components/home/UserHome'\r\nimport Auth from './auth/Auth';\r\nimport Footer from './components/home/Footer';\r\nimport  { Button } from '@material-ui/core'\r\n\r\n\r\ntype AppStates = {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  sessionToken: string;\r\n  redirect: null | string;\r\n  redirectValue: string\r\n}\r\n\r\nclass App extends React.Component<{} ,AppStates> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    sessionToken:'',\r\n    redirect: null,\r\n    redirectValue: '',\r\n    }\r\n    \r\n  }\r\n\r\n\r\nupdateToken = (newToken: any) => {\r\n  localStorage.setItem('token', newToken);\r\n  this.setState({ sessionToken: newToken });\r\n  console.log(newToken);\r\n};\r\n\r\nclearToken = () => {\r\n  localStorage.clear();\r\n  this.setState({ sessionToken: '' });\r\n};\r\n\r\ngetToken = () => {\r\n  if (localStorage.getItem('token')) {\r\n    this.setState({ sessionToken: localStorage.getItem('token') ||''  });\r\n  } else {\r\n    console.log('Login required.')\r\n  }\r\n};\r\n\r\ncomponentDidMount() {\r\n  this.getToken()\r\n}\r\n\r\nredirect = () => {\r\n  this.setState({redirectValue: '/userhome'})\r\n  console.log('Insert Redirect Here!')\r\n  return (\r\n    <>\r\n        <Redirect to = '/banana'/>\r\n    </>\r\n  )\r\n}\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className='app'>\r\n        <div className=\"center\">\r\n        \r\n        <Router>\r\n\r\n          <Header />\r\n        {/* <Button href='/testhome'>PLEASE!</Button> */}\r\n            <Switch>\r\n\r\n              \r\n              <Route exact path ='/userhome'>\r\n                {/* {this.state.sessionToken !== '' ? \r\n                  <UserHome sessionToken={this.state.sessionToken}/> : <h1>SessionToken empty!</h1>} */}\r\n                  <UserHome sessionToken={this.state.sessionToken}/>\r\n                  {/* <Home sessionToken ={this.state.sessionToken}/> */}\r\n                  {/* <SideBar clearToken = {this.clearToken}/> */}\r\n              </Route>\r\n\r\n              <Route path = \"/user/\">\r\n                <Auth redirectValue={this.state.redirectValue} updateToken={this.updateToken} redirect={this.redirect}/>\r\n              </Route>\r\n\r\n              <Route exact path=\"/\">\r\n                <HomePage />\r\n              </Route>\r\n              \r\n\r\n            </Switch>\r\n\r\n          </Router>\r\n\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n      \r\n\r\n    );\r\n  }\r\n    \r\n};\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\HomePage.tsx",["81","82","83","84"],"import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport  { Button } from '@material-ui/core'\r\n\r\nexport interface Props {\r\n    \r\n}\r\n \r\nexport interface State {\r\n    \r\n}\r\n\r\n\r\nclass HomePage extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n       \r\n    }\r\n\r\n    welcomeStyle = {\r\n        root: {\r\n            // display:'flex',\r\n            width: '100%',\r\n            margin: 'auto',\r\n            height: '100%'\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <div style={this.welcomeStyle.root}>\r\n                <h5>Welcome to the HomePage!</h5>\r\n                 <br />\r\n                <Button href='/user/login'>Login</Button>\r\n                <br />\r\n                <br />\r\n                <Button href='/user/signup'>Signup</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HomePage;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Header.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Auth.tsx",["85","86"],"\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom'\r\n\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\n\r\ntype AuthStates = {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n    sessionToken: any;\r\n    // updateToken: (newToken:string) => void;\r\n    getToken: any;\r\n    setFirstName: (e: any) => any;\r\n    setLastName: (e: any) => any;\r\n    setEmail: (e: any) => any;\r\n    setPassword: (e: any) => any;\r\n}\r\n\r\ntype AuthProps = {\r\n  updateToken: (newToken:string) => void;\r\n  redirect: () => void,\r\n  redirectValue: string\r\n\r\n}\r\n \r\nclass Auth extends React.Component< AuthProps, AuthStates> {\r\n    constructor(props: AuthProps) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            sessionToken: \"\",\r\n            getToken: '',\r\n            setFirstName: (e:any) => {\r\n              this.setState({\r\n                firstName: e\r\n              })\r\n            },\r\n            setLastName: (e:any) => {\r\n              this.setState({\r\n                lastName: e\r\n              })\r\n            },\r\n            setEmail: (e:any) => {\r\n              this.setState({\r\n                email: e\r\n              })\r\n            },\r\n            setPassword: (e:any) => {\r\n              this.setState({\r\n                password: e\r\n              })\r\n            },\r\n           \r\n          }\r\n        };\r\n\r\n       \r\n\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                \r\n                    <Switch>\r\n                        <Route exaxt path='/user/login'>\r\n                            <Login \r\n                            email = {this.state.email}\r\n                            password = {this.state.password}\r\n                            setEmail = {this.state.setEmail}\r\n                            setPassword = {this.state.setPassword}\r\n                            sessionToken = {this.state.sessionToken}\r\n                            getToken={this.state.getToken}\r\n                            updateToken = {this.props.updateToken}\r\n                            redirect = {this.props.redirect}\r\n                            redirectValue = {this.props.redirectValue}\r\n                            />\r\n                        </Route>\r\n                    {/* </Switch>\r\n                </Router>\r\n                <Router>\r\n                    <Switch> */}\r\n                        <Route exact path='/user/signup'>\r\n                            <Signup \r\n                            firstName = {this.state.firstName}\r\n                            lastName = {this.state.lastName}\r\n                            email = {this.state.email}\r\n                            password = {this.state.password}\r\n                            setFirstName = {this.state.setFirstName}\r\n                            setLastName = {this.state.setLastName}\r\n                            setEmail = {this.state.setEmail}\r\n                            setPassword = {this.state.setPassword}\r\n                            sessionToken = {this.state.sessionToken}\r\n                            updateToken = {this.props.updateToken}\r\n                            redirect = {this.props.redirect}\r\n                            redirectValue = {this.props.redirectValue}\r\n                            />\r\n                        </Route>\r\n                    </Switch>\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Auth;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Login.tsx",["87","88","89","90","91","92","93","94"],"import React from 'react'\r\nimport {FormControl, InputLabel, Input, FormHelperText, Button, Container, Grid} from '@material-ui/core';\r\n\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\n\r\ntype LoginProps = {\r\n    email: string;\r\n    password: string;\r\n    updateToken: (newToken:string) => void;\r\n    sessionToken: any;\r\n    getToken: any;\r\n    setEmail: (e: any) => any;\r\n    setPassword: (e: any) => any;\r\n    redirect: () => void\r\n    redirectValue: string\r\n}\r\n\r\n \r\nclass Login extends React.Component<LoginProps, {redirectValue: null|string} > {\r\n    constructor(props: LoginProps) {\r\n        super(props);\r\n        this.state = {\r\n            redirectValue: null\r\n        }\r\n    }\r\n\r\n    // updateToken = (newToken: any) => {\r\n    //     localStorage.setItem('token', newToken);\r\n    //     this.setState({ sessionToken: newToken });\r\n    //     console.log(newToken);\r\n    //   };\r\n\r\n    // history = useHistory()\r\n\r\n    handleSubmit = (event:any) => {\r\n        event.preventDefault();\r\n        fetch('http://localhost:3500/user/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                user: {\r\n                    email: this.props.email,\r\n                    password: this.props.password\r\n                }\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n            // .then((res) => res.json())\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                  console.log(\"Login successful.\")\r\n                } else {\r\n                  console.log(\"Login failed.\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                this.props.updateToken(data.sessionToken)\r\n                // this.props.redirect()\r\n                console.log(data.sessionToken)\r\n                this.setState({redirectValue: '/userhome'})\r\n                // this.props.history.push('/testhome')\r\n            })\r\n    }\r\n\r\n\r\n    \r\n\r\n    render() { \r\n        if (this.state.redirectValue){\r\n            return <Redirect to = {this.state.redirectValue} />\r\n        }\r\n        return (\r\n            <div className='center'>\r\n                \r\n                <Container maxWidth=\"sm\">\r\n                <h3>Login</h3>\r\n                \r\n                <form onSubmit = {this.handleSubmit}>\r\n               \r\n                <label htmlFor=\"email\">Email:</label>\r\n                <br />\r\n                <input id=\"email\" \r\n                        // aria-describedby=\"my-helper-text\" \r\n                        className='email' \r\n                        onChange={(e) => this.props.setEmail(e.target.value)} \r\n                        value={this.props.email}/>\r\n\r\n                <br />\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <br />\r\n                <input id=\"password\" \r\n                        // aria-describedby=\"my-helper-text\" \r\n                        className='password' \r\n                        onChange={(e) => this.props.setPassword(e.target.value)} \r\n                        value={this.props.password}/>\r\n                <br />\r\n                <input type=\"submit\" value=\"Submit\" />\r\n                </form> \r\n                </Container>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Login;\r\n\r\n{/* <FormControl onSubmit={this.handleSubmit}>\r\n                        <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n                        <Input \r\n                        id=\"email\" \r\n                        aria-describedby=\"my-helper-text\" \r\n                        className='email' \r\n                        onChange={(e) => this.props.setEmail(e.target.value)} \r\n                        value={this.props.email} />\r\n                        <FormHelperText id=\"my-helper-text\">We'll never share your email.\r\n                        </FormHelperText>\r\n                    </FormControl >\r\n                    <br />\r\n                    <FormControl onSubmit={this.handleSubmit}>\r\n                        <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                        <Input \r\n                        id=\"password\" \r\n                        aria-describedby=\"my-helper-text\" \r\n                        className='password' \r\n                        onChange={(e) => this.props.setPassword(e.target.value)} \r\n                        value={this.props.password} />\r\n                        <FormHelperText id=\"my-helper-text\"> Don't forget this!\r\n                        </FormHelperText>\r\n                    </FormControl>\r\n                        <br />\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" >Signup</Button> */}","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Signup.tsx",["95","96","97","98","99","100"],"import React from 'react'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { FormControl, InputLabel, Input, FormHelperText, ThemeProvider, Container, Button } from '@material-ui/core';\r\n\r\n\r\ntype SignupProps = {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n    updateToken: (newToken: string) => void;\r\n    sessionToken: any;\r\n    setFirstName: (e: any) => any;\r\n    setLastName: (e: any) => any;\r\n    setEmail: (e: any) => any;\r\n    setPassword: (e: any) => any;\r\n    redirect: () => void;\r\n    redirectValue: string\r\n}\r\n\r\ntype SignupStates = {\r\n    updateToken: (newToken: string) => void;\r\n    redirectValue: null | string;\r\n}\r\n\r\n\r\n//fetch then returns object interface\r\n\r\nclass Signup extends React.Component<SignupProps, SignupStates, {redirectValue: null | string}> {\r\n    constructor(props: SignupProps) {\r\n        super(props);\r\n        this.state = {\r\n            updateToken: (any) => any,\r\n            redirectValue: null\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        fetch(`http://localhost:3500/user/signup`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                user: {\r\n                    firstName: this.props.firstName,\r\n                    lastName: this.props.lastName,\r\n                    email: this.props.email,\r\n                    password: this.props.password\r\n                }\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n        .then((res) => {\r\n            if (res.status === 200) {\r\n              alert(\"Signup Successful!\")\r\n            } else {\r\n              alert(\"Signup Failed!\");\r\n            }\r\n            console.log(res)\r\n            return res.json();\r\n            \r\n        })\r\n        .then((data) => {\r\n                console.log(data)\r\n                this.props.updateToken(data.sessionToken)\r\n                // this.props.redirect();\r\n                this.setState({redirectValue: '/userhome'})\r\n            })\r\n    };\r\n    \r\n\r\n    render() {\r\n        if (this.state.redirectValue){\r\n            return <Redirect to = {this.state.redirectValue} />\r\n        }\r\n        return (\r\n            <div>\r\n                <Container maxWidth=\"sm\">\r\n                    <h3>Signup</h3>\r\n                    <form onSubmit = {this.handleSubmit}>\r\n                        <label htmlFor=\"firstName\">First Name:</label>\r\n                        <br />\r\n                        <input \r\n                            id=\"firstName\"\r\n                            className='firstName'\r\n                            onChange={(e) => this.props.setFirstName(e.target.value)} \r\n                            value={this.props.firstName}/>\r\n                        <br />\r\n                        <label htmlFor=\"lastName\">Last Name:</label>\r\n                        <br />\r\n                        <input\r\n                            id=\"lastName\" \r\n                            className='lastName' \r\n                            onChange={(e) => this.props.setLastName(e.target.value)} \r\n                            value={this.props.lastName}/>\r\n                        <br />\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <br />\r\n                        <input\r\n                            id=\"email\" \r\n                            className='email' \r\n                            onChange={(e) => this.props.setEmail(e.target.value)} \r\n                            value={this.props.email}/>\r\n                        <br />\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <br />\r\n                        <input\r\n                            id=\"password\"  \r\n                            className='password' \r\n                            onChange={(e) => this.props.setPassword(e.target.value)} \r\n                            value={this.props.password}/>\r\n                        <br />\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                    </form> \r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;\r\n\r\n\r\n                    // <FormControl onSubmit={this.handleSubmit}>\r\n                    //     <InputLabel htmlFor=\"firstName\">First Name</InputLabel>\r\n                    //     <Input \r\n                    //     id=\"firstName\"\r\n                    //     className='firstName'\r\n                    //     onChange={(e) => this.props.setFirstName(e.target.value)} \r\n                    //     value={this.props.firstName} />\r\n                    // </FormControl >\r\n                    // <br />\r\n                    // <FormControl onSubmit={this.handleSubmit}>\r\n                    //     <InputLabel htmlFor=\"lastName\">Last Name</InputLabel>\r\n                    //     <Input \r\n                    //     id=\"lastName\" \r\n                    //     className='lastName' \r\n                    //     onChange={(e) => this.props.setLastName(e.target.value)} \r\n                    //     value={this.props.lastName} />\r\n                    // </FormControl>\r\n                    // <br />\r\n                    // <FormControl onSubmit={this.handleSubmit}>\r\n                    //     <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n                    //     <Input \r\n                    //     id=\"email\" \r\n                    //     aria-describedby=\"my-helper-text\" \r\n                    //     className='email' \r\n                    //     onChange={(e) => this.props.setEmail(e.target.value)} \r\n                    //     value={this.props.email} />\r\n                    //     <FormHelperText id=\"my-helper-text\">We'll never share your email.\r\n                    //     </FormHelperText>\r\n                    // </FormControl >\r\n                    // <br />\r\n                    // <FormControl onSubmit={this.handleSubmit}>\r\n                    //     <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                    //     <Input \r\n                    //     id=\"password\" \r\n                    //     aria-describedby=\"my-helper-text\" \r\n                    //     className='password' \r\n                    //     onChange={(e) => this.props.setPassword(e.target.value)} \r\n                    //     value={this.props.password} />\r\n                    //     <FormHelperText id=\"my-helper-text\"> Don't forget this!\r\n                    //     </FormHelperText>\r\n                    //     <Button type=\"submit\" variant=\"contained\" color=\"secondary\" >Signup</Button>\r\n                    // </FormControl>","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\theme.tsx",[],["101","102"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Footer.tsx",["103","104"],"import React from 'react';\r\nimport { Component } from 'react';\r\n\r\nexport interface Props {\r\n    \r\n}\r\n \r\nexport interface State {\r\n    \r\n}\r\n \r\nclass Footer extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    footerStyle = {\r\n        root: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            bottom: '0px',\r\n            width: '100%',\r\n            height: '50px',\r\n            backgroundColor: 'black',\r\n            color: 'white',\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div style = {this.footerStyle.root}>\r\n                <p>This is the footer!</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\SideBar.tsx",["105"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\IndividualMovie.tsx",["106","107","108"],"import React from 'react';\r\nimport { Component } from 'react';\r\n\r\nimport { Switch, useParams } from 'react-router-dom'\r\nimport { Card, Button, CardContent, List, Grid } from '@material-ui/core';\r\n\r\nimport AddReview from '../review/AddReview'\r\nimport ViewReviews from '../review/ViewReviews'\r\n\r\n\r\n\r\n\r\ntype IndividualMovieProps = {\r\n    movie: any;\r\n    sessionToken: string;\r\n    // fetchMovies: () => void;\r\n}\r\n \r\ntype IndividualMovieStates = {\r\n    addReview: boolean;\r\n    viewReviews: boolean;\r\n}\r\n \r\nclass IndividualMovie extends React.Component<IndividualMovieProps,IndividualMovieStates> {\r\n    constructor(props: IndividualMovieProps) {\r\n        super(props);\r\n        this.state = { \r\n            addReview: false,\r\n            viewReviews: false\r\n        };\r\n    }\r\n\r\n    addReviewOn = () => {\r\n        this.setState({addReview: true}) \r\n    }\r\n\r\n    addReviewOff = () => {\r\n        this.setState({addReview: false})\r\n    }\r\n\r\n    viewReviewsOn = () => {\r\n        this.setState({viewReviews: true})\r\n    }\r\n\r\n    viewReviewsOff = () => {\r\n        this.setState({viewReviews: false})\r\n    }\r\n\r\n    style = {\r\n        root: {\r\n            minWidth: '300px'\r\n        }\r\n    }\r\n          \r\n    render() { \r\n        return ( \r\n            <>\r\n            <Grid container spacing={3}  justify=\"center\" alignItems=\"center\">\r\n                <Grid item md={6} sm={1}>\r\n                    <Card style={this.style.root}>\r\n                        <CardContent>\r\n                            <h4>Title: {this.props.movie.title}</h4>\r\n                        <List>\r\n                            <li>\r\n                            Year: {this.props.movie.year}\r\n                            </li>\r\n                            <li>\r\n                                Duration: {this.props.movie.duration}\r\n                            </li>\r\n                            <li>\r\n                                Description: {this.props.movie.description}\r\n                            </li>\r\n                        </List>\r\n                        <Button onClick={(e:any) => {this.addReviewOn()}}>Add Review</Button>\r\n                        <Button onClick={(e:any) => {this.viewReviewsOn()}}>View Reviews</Button>\r\n                        </CardContent>\r\n                    </Card>\r\n                        \r\n                </Grid>\r\n                \r\n            </Grid>\r\n            \r\n\r\n            {this.state.addReview ? \r\n            <AddReview \r\n            sessionToken={this.props.sessionToken} \r\n            addReview={this.state.addReview}\r\n            addReviewOff={this.addReviewOff}\r\n            movieId={this.props.movie.id} /> : <></>}\r\n            \r\n            {this.state.viewReviews ? \r\n            <ViewReviews\r\n            sessionToken={this.props.sessionToken}\r\n            viewReviewsOff={this.viewReviewsOff}\r\n            movieId={this.props.movie.id}\r\n            movieTitle={this.props.movie.title}\r\n            // fetchMovies = {this.props.fetchMovies} \r\n             /> : <></>}\r\n\r\n            </>\r\n         );\r\n    }\r\n\r\n}\r\n \r\nexport default IndividualMovie;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\UserHome.tsx",["109","110","111","112","113","114","115","116"],"import React from 'react';\r\nimport { Redirect, Switch, Route} from 'react-router-dom'\r\n\r\nimport {Container as Grif, Button, Grid, CardContent, Card } from '@material-ui/core'\r\n\r\nimport IndividualMovie from '../movie/IndividualMovie';\r\nimport AddMovie from '../movie/AddMovie';\r\n\r\n\r\n\r\ntype UserHomeProps = {\r\n    sessionToken: string\r\n}\r\n \r\ntype UserHomeStates = {\r\n    movie: any,\r\n    movieTitle: string,\r\n    movieYear: number,\r\n    movieDuration: number,\r\n    movieDescription: string,\r\n    addMovie: boolean\r\n    reviewTitle: string,\r\n    reviewEmotion: string,\r\n    reviewAuthor: string,\r\n    comment: string,\r\n    commentAuthor: string\r\n    // update these to eventlister instead of any //\r\n    setMovie: (e:any) => void;\r\n    setReviewTitle: (e: any) => any;\r\n    setReviewEmotion: (e: any) => any;\r\n    setReviewAuthor: (e: any) => any;\r\n    setComment: (e: any) => any;\r\n    setCommentAuthor: (e: any) => any;\r\n    updateToken: any;\r\n    sessionToken: any;\r\n    \r\n\r\n}\r\n\r\n//TRYING TO SEND MOVIE OBJECT DOWN TO INDIVIDUAL MOVIE TO BE MAPPED //\r\n \r\nclass UserHome extends React.Component<UserHomeProps, UserHomeStates> {\r\n    constructor(props: UserHomeProps) {\r\n        super(props);\r\n        this.state = {\r\n            movie: [],\r\n            movieTitle: \"\",\r\n            movieYear: 0,\r\n            movieDuration: 0,\r\n            movieDescription: \"\",\r\n            addMovie: false,\r\n            reviewTitle: \" \",\r\n            reviewEmotion: \" \",\r\n            reviewAuthor: \"\",\r\n            comment: \"\",\r\n            commentAuthor: \"\",\r\n            updateToken: \"\",\r\n            sessionToken: \"\",\r\n            setMovie: (e:any) => {\r\n                this.setState({\r\n                  movie: e })\r\n            },\r\n            setReviewTitle: (e) => {\r\n              this.setState({\r\n                reviewTitle: e\r\n              })\r\n            },\r\n            setReviewEmotion: (e) => {\r\n              this.setState({\r\n                reviewEmotion: e\r\n              })\r\n            },\r\n            setReviewAuthor: (e) => {\r\n                this.setState({\r\n                  reviewAuthor: e\r\n                })\r\n            },\r\n            setComment: (e) => {\r\n                this.setState({\r\n                  comment: e\r\n                })\r\n            },\r\n            setCommentAuthor: (e) => {\r\n                this.setState({\r\n                  commentAuthor: e\r\n                })\r\n              }\r\n          }\r\n        }\r\n\r\n        fetchMovies = () => {\r\n            fetch('http://localhost:3500/movie/', {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': localStorage.getItem('token')|| ''\r\n                })\r\n            }) .then((movie) => movie.json())\r\n               .then((movieData) => {\r\n                    this.setState({\r\n                        movie: movieData\r\n                    })\r\n                    console.log(movieData)\r\n               }) .catch (\r\n                   (err) => console.log(err)\r\n               )\r\n        }\r\n\r\n        componentDidMount() {\r\n            if (localStorage.getItem('token')) {\r\n            this.fetchMovies();\r\n            }\r\n        }\r\n\r\n        movieMapper = () => {\r\n            return(this.state.movie?.map((movie:any,index:number) => {\r\n                return (\r\n                    <div key = {movie.id}>\r\n                    <IndividualMovie \r\n                    movie={movie}                          \r\n                    sessionToken = {this.props.sessionToken}\r\n                    // fetchMovies={this.fetchMovies}  \r\n                    />\r\n                    </div>\r\n                )\r\n            }))\r\n        }\r\n\r\n        addMovieOn = () => {\r\n            this.setState({addMovie: true})\r\n        }\r\n\r\n        addMovieOff = () => {\r\n            this.setState({addMovie: false})\r\n        }\r\n\r\n        // userHomeStyle =  {\r\n        //     root: {\r\n        //         display: 'flex',\r\n        //         alignItems: 'center',\r\n        //         backgroundColor: 'black',\r\n        //         width: '80%',\r\n        //         height: '80%'\r\n        //     }\r\n        // }\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                \r\n            <h3>Welcome User</h3>\r\n                <Grid container\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\">\r\n                {this.movieMapper()}\r\n                </Grid>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                    <div>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={(e:any)=>this.addMovieOn()}>Post A Movie</Button>\r\n                    </div>\r\n                    \r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    \r\n                {this.state.addMovie ?\r\n                    <AddMovie \r\n                    sessionToken={this.props.sessionToken}\r\n                    addMovie={this.state.addMovie}\r\n                    fetchMovies={this.fetchMovies}\r\n                    addMovieOff={this.addMovieOff}\r\n                    /> : <></>\r\n                }\r\n\r\n            \r\n\r\n        </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default UserHome;\r\n\r\n// COMMENT GRAVEYARD // \r\n\r\n// interface Movie {\r\n//     movieTitle: string,\r\n//     movieTitle: string,\r\n//     movieYear: number,\r\n//     movieDuration: number,\r\n//     movieDescription: string,\r\n\r\n// }\r\n\r\n// setMovieTitle: (e: any) => any;\r\n    // setMovieYear: (e: any) => any;\r\n    // setMovieDuration: (e: any) => any;\r\n    // setMovieDescription: (e: any) => any;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\AddMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\AddReview.tsx",["117"],"import React from 'react';\r\n\r\nimport { Button, Dialog, DialogContent, DialogTitle, FormControl, Input, InputLabel, Modal, TextField, } from '@material-ui/core';\r\n\r\n\r\ntype AddReviewProps = {\r\n    sessionToken: string\r\n    addReview: boolean\r\n    addReviewOff: () => void\r\n    movieId: number\r\n    // fetchMovies: () => void\r\n    // addMovieOff: () => void\r\n}\r\n \r\ntype AddReviewStates = {\r\n open: boolean;\r\n title: string,\r\n emotion: string,\r\n review: string,\r\n author: string,\r\n addReview: boolean,\r\n setTitle: (e: any) => any;\r\n setEmotion: (e:any) => any;\r\n setReview: (e:any) => any;\r\n setAuthor: (e:any) => any\r\n//  onClose: (e:EventListener) => void;\r\n}\r\n \r\nclass AddReview extends React.Component<AddReviewProps, AddReviewStates> {\r\n\r\n    constructor(props: AddReviewProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            title: '',\r\n            emotion: '',\r\n            review: '',\r\n            author: '',\r\n            addReview: true,\r\n            // onClose: (e:EventListener) => void;\r\n            setTitle: (e) => {\r\n                this.setState({\r\n                  title: e\r\n                })\r\n            },\r\n            setEmotion: (e) => {\r\n                this.setState({\r\n                  emotion: e\r\n                })\r\n            },\r\n            setReview: (e) => {\r\n                this.setState({\r\n                  review: e\r\n                })\r\n            },\r\n            setAuthor: (e) => {\r\n                this.setState({\r\n                  author: e\r\n                })\r\n            },\r\n        };\r\n    }\r\n\r\nhandleSubmit = (e:any) => {\r\n    e.preventDefault();\r\n    console.log(this.props.movieId)\r\n    fetch(`http://localhost:3500/review/create`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            review: {\r\n                title: this.state.title,\r\n                emotion: this.state.emotion,\r\n                review: this.state.review,\r\n                author: this.state.author,\r\n                movieId: this.props.movieId\r\n            }\r\n        }),\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': this.props.sessionToken\r\n        })\r\n    })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            console.log(data)\r\n            this.state.setTitle('')\r\n            this.state.setEmotion(0)\r\n            this.state.setReview(0)\r\n            this.state.setAuthor('')\r\n            // this.props.fetchMovies()\r\n            this.handleClose()\r\n\r\n        })\r\n}\r\n   \r\n\r\n\r\n    handleOpen = () => {\r\n        this.setState({open:true})\r\n    }\r\n    handleClose = () => {\r\n        this.setState({open:false})\r\n        this.setState({addReview : false})\r\n        this.props.addReviewOff()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({open:true})\r\n    }\r\n\r\n    // addMovieOff = () => {\r\n        \r\n    // }\r\n    dialogStyle = {\r\n        root: {\r\n            alignItems:'center',\r\n            minWidth: '500px',\r\n            width: '800px',\r\n            height: '800px'\r\n        }\r\n    }\r\n\r\n\r\n    render() { \r\n\r\n        return (  \r\n\r\n            <Dialog open={this.state.open} \r\n            // style={this.dialogStyle.root}\r\n            >\r\n                <DialogTitle>Add A Review!</DialogTitle>\r\n                <DialogContent >\r\n                    <FormControl >\r\n                        <InputLabel htmlFor='title'>Title</InputLabel>\r\n                        <Input id='title' onChange={(e)=> this.state.setTitle(e.target.value)}/>\r\n                    </FormControl>\r\n                    </DialogContent>\r\n                    <DialogContent >\r\n                    <FormControl>\r\n                        <InputLabel htmlFor='emotion'>Emotion</InputLabel>\r\n                        <Input id='emotion'onChange={(e)=> this.state.setEmotion(e.target.value)}/>\r\n                    </FormControl>\r\n                    </DialogContent>\r\n                    <DialogContent >\r\n                    {/* <FormControl> */}\r\n                        <InputLabel htmlFor='review'>Review</InputLabel>\r\n                        <TextField \r\n                        id=\"standard-multiline-flexible\"\r\n                        // label=\"Multiline\"\r\n                        multiline\r\n                        rowsMax={8}\r\n                        fullWidth\r\n                        // id='review'\r\n                        onChange={(e)=> this.state.setReview(e.target.value)}/>\r\n                    {/* </FormControl> */}\r\n                    </DialogContent>\r\n                    <DialogContent >\r\n                    <FormControl>\r\n                        <InputLabel htmlFor='author'>Your Name:</InputLabel>\r\n                        <Input id='author'onChange={(e)=> this.state.setAuthor(e.target.value)}/>\r\n                    </FormControl>\r\n                    </DialogContent>\r\n                    <DialogContent >\r\n                    <Button onClick ={this.handleClose}>Cancel</Button>\r\n                    <Button type='submit' onClick={this.handleSubmit}>Add Review</Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AddReview;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\ViewReviews.tsx",["118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":15},{"ruleId":"123","severity":1,"message":"127","line":11,"column":11,"nodeType":"125","messageId":"126","endLine":11,"endColumn":17},{"ruleId":"123","severity":1,"message":"128","line":3,"column":27,"nodeType":"125","messageId":"126","endLine":3,"endColumn":33},{"ruleId":"123","severity":1,"message":"129","line":3,"column":35,"nodeType":"125","messageId":"126","endLine":3,"endColumn":40},{"ruleId":"123","severity":1,"message":"130","line":3,"column":42,"nodeType":"125","messageId":"126","endLine":3,"endColumn":48},{"ruleId":"131","severity":1,"message":"132","line":17,"column":5,"nodeType":"133","messageId":"134","endLine":20,"endColumn":6},{"ruleId":"123","severity":1,"message":"128","line":3,"column":27,"nodeType":"125","messageId":"126","endLine":3,"endColumn":33},{"ruleId":"123","severity":1,"message":"135","line":3,"column":50,"nodeType":"125","messageId":"126","endLine":3,"endColumn":60},{"ruleId":"123","severity":1,"message":"136","line":2,"column":9,"nodeType":"125","messageId":"126","endLine":2,"endColumn":20},{"ruleId":"123","severity":1,"message":"137","line":2,"column":22,"nodeType":"125","messageId":"126","endLine":2,"endColumn":32},{"ruleId":"123","severity":1,"message":"138","line":2,"column":34,"nodeType":"125","messageId":"126","endLine":2,"endColumn":39},{"ruleId":"123","severity":1,"message":"139","line":2,"column":41,"nodeType":"125","messageId":"126","endLine":2,"endColumn":55},{"ruleId":"123","severity":1,"message":"127","line":2,"column":57,"nodeType":"125","messageId":"126","endLine":2,"endColumn":63},{"ruleId":"123","severity":1,"message":"140","line":2,"column":76,"nodeType":"125","messageId":"126","endLine":2,"endColumn":80},{"ruleId":"123","severity":1,"message":"135","line":4,"column":20,"nodeType":"125","messageId":"126","endLine":4,"endColumn":30},{"ruleId":"141","severity":1,"message":"142","line":110,"column":1,"nodeType":"143","messageId":"144","endLine":134,"endColumn":105},{"ruleId":"123","severity":1,"message":"136","line":5,"column":10,"nodeType":"125","messageId":"126","endLine":5,"endColumn":21},{"ruleId":"123","severity":1,"message":"137","line":5,"column":23,"nodeType":"125","messageId":"126","endLine":5,"endColumn":33},{"ruleId":"123","severity":1,"message":"138","line":5,"column":35,"nodeType":"125","messageId":"126","endLine":5,"endColumn":40},{"ruleId":"123","severity":1,"message":"139","line":5,"column":42,"nodeType":"125","messageId":"126","endLine":5,"endColumn":56},{"ruleId":"123","severity":1,"message":"145","line":5,"column":58,"nodeType":"125","messageId":"126","endLine":5,"endColumn":71},{"ruleId":"123","severity":1,"message":"127","line":5,"column":84,"nodeType":"125","messageId":"126","endLine":5,"endColumn":90},{"ruleId":"119","replacedBy":"146"},{"ruleId":"121","replacedBy":"147"},{"ruleId":"123","severity":1,"message":"148","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":19},{"ruleId":"131","severity":1,"message":"132","line":13,"column":5,"nodeType":"133","messageId":"134","endLine":15,"endColumn":6},{"ruleId":"123","severity":1,"message":"140","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":12},{"ruleId":"123","severity":1,"message":"148","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":19},{"ruleId":"123","severity":1,"message":"130","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":16},{"ruleId":"123","severity":1,"message":"149","line":4,"column":18,"nodeType":"125","messageId":"126","endLine":4,"endColumn":27},{"ruleId":"123","severity":1,"message":"150","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":18},{"ruleId":"123","severity":1,"message":"130","line":2,"column":20,"nodeType":"125","messageId":"126","endLine":2,"endColumn":26},{"ruleId":"123","severity":1,"message":"129","line":2,"column":28,"nodeType":"125","messageId":"126","endLine":2,"endColumn":33},{"ruleId":"123","severity":1,"message":"151","line":4,"column":22,"nodeType":"125","messageId":"126","endLine":4,"endColumn":26},{"ruleId":"123","severity":1,"message":"152","line":4,"column":42,"nodeType":"125","messageId":"126","endLine":4,"endColumn":53},{"ruleId":"123","severity":1,"message":"153","line":4,"column":55,"nodeType":"125","messageId":"126","endLine":4,"endColumn":59},{"ruleId":"154","severity":1,"message":"155","line":92,"column":13,"nodeType":"156","messageId":"157","endLine":104,"endColumn":25,"fix":"158"},{"ruleId":"154","severity":1,"message":"159","line":92,"column":13,"nodeType":"156","messageId":"157","endLine":98,"endColumn":21,"fix":"160"},{"ruleId":"123","severity":1,"message":"161","line":3,"column":86,"nodeType":"125","messageId":"126","endLine":3,"endColumn":91},{"ruleId":"141","severity":1,"message":"142","line":119,"column":3,"nodeType":"143","messageId":"144","endLine":131,"endColumn":33},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"@typescript-eslint/no-unused-vars","'SideBar' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useHistory' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Input' is defined but never used.","'FormHelperText' is defined but never used.","'Grid' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'ThemeProvider' is defined but never used.",["162"],["163"],"'Component' is defined but never used.","'useParams' is defined but never used.","'Redirect' is defined but never used.","'Grif' is defined but never used.","'CardContent' is defined but never used.","'Card' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"164","text":"165"},"Unexpected whitespace before property then.",{"range":"166","text":"165"},"'Modal' is defined but never used.","no-global-assign","no-unsafe-negation",[3000,3002],".",[2764,2766]]