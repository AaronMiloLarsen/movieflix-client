[{"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\index.tsx":"1","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\reportWebVitals.ts":"2","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\App.tsx":"3","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\HomePage.tsx":"4","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Header.tsx":"5","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Auth.tsx":"6","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Login.tsx":"7","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Signup.tsx":"8","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\theme.tsx":"9","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Footer.tsx":"10","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\SideBar.tsx":"11","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\IndividualMovie.tsx":"12","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\UserHome.tsx":"13","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\AddMovie.tsx":"14","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\AddReview.tsx":"15","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\ViewReviews.tsx":"16","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\AddComment.tsx":"17","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\IndividualReview.tsx":"18","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\ViewComments.tsx":"19","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\Profile.tsx":"20","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyMovies.tsx":"21","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyComments.tsx":"22","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyReviews.tsx":"23","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\EditMovie.tsx":"24","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\EditReview.tsx":"25","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\EditComment.tsx":"26","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\DeleteMovie.tsx":"27","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\DeleteReview.tsx":"28","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\DeleteComment.tsx":"29"},{"size":500,"mtime":499162500000,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":2976,"mtime":1612196446279,"results":"33","hashOfConfig":"31"},{"size":860,"mtime":1611983267106,"results":"34","hashOfConfig":"31"},{"size":2709,"mtime":1612196157984,"results":"35","hashOfConfig":"31"},{"size":3582,"mtime":1612024131227,"results":"36","hashOfConfig":"31"},{"size":4735,"mtime":1612023970746,"results":"37","hashOfConfig":"31"},{"size":6617,"mtime":1612024110750,"results":"38","hashOfConfig":"31"},{"size":417,"mtime":1610798911665,"results":"39","hashOfConfig":"31"},{"size":704,"mtime":1611983572657,"results":"40","hashOfConfig":"31"},{"size":1051,"mtime":1611469100519,"results":"41","hashOfConfig":"31"},{"size":2986,"mtime":1611983513342,"results":"42","hashOfConfig":"31"},{"size":5673,"mtime":1611983411643,"results":"43","hashOfConfig":"31"},{"size":4574,"mtime":1612071697955,"results":"44","hashOfConfig":"31"},{"size":5162,"mtime":1611983586250,"results":"45","hashOfConfig":"31"},{"size":6264,"mtime":1612059804160,"results":"46","hashOfConfig":"31"},{"size":3252,"mtime":1611929169546,"results":"47","hashOfConfig":"31"},{"size":1190,"mtime":1611926569604,"results":"48","hashOfConfig":"31"},{"size":5312,"mtime":1611992055508,"results":"49","hashOfConfig":"31"},{"size":4785,"mtime":1612196491689,"results":"50","hashOfConfig":"31"},{"size":5540,"mtime":1612192068497,"results":"51","hashOfConfig":"31"},{"size":5309,"mtime":1612194932556,"results":"52","hashOfConfig":"31"},{"size":5350,"mtime":1612193721017,"results":"53","hashOfConfig":"31"},{"size":5468,"mtime":1612183749806,"results":"54","hashOfConfig":"31"},{"size":5521,"mtime":1612181989078,"results":"55","hashOfConfig":"31"},{"size":4387,"mtime":1612187081341,"results":"56","hashOfConfig":"31"},{"size":1829,"mtime":1612192520013,"results":"57","hashOfConfig":"31"},{"size":1834,"mtime":1612193999302,"results":"58","hashOfConfig":"31"},{"size":1865,"mtime":1612194929947,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"dcdvfl",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\index.tsx",[],["128","129"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\reportWebVitals.ts",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\App.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\HomePage.tsx",["130"],"import React from 'react';\r\n\r\nimport  { Button } from '@material-ui/core'\r\n\r\nexport interface Props {\r\n    \r\n}\r\n \r\nexport interface State {\r\n    \r\n}\r\n\r\n\r\nclass HomePage extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n       \r\n    }\r\n\r\n    welcomeStyle = {\r\n        root: {\r\n            // display:'flex',\r\n            width: '100%',\r\n            margin: 'auto',\r\n            height: '100%'\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <div style={this.welcomeStyle.root}>\r\n                <h5>Welcome to the HomePage!</h5>\r\n                 <br />\r\n                <Button href='/user/login'>Login</Button>\r\n                <br />\r\n                <br />\r\n                <Button href='/user/signup'>Signup</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HomePage;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Header.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Auth.tsx",["131"],"\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch,  } from 'react-router-dom'\r\n\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\n\r\n\r\ntype AuthProps = {\r\n  updateToken: (newToken:string, userId: string) => void;\r\n  redirect: () => void,\r\n  redirectValue: string\r\n\r\n}\r\n\r\ntype AuthStates = {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n    sessionToken: any;\r\n    // updateToken: (newToken:string) => void;\r\n    getToken: any;\r\n    setFirstName: (e: any) => any;\r\n    setLastName: (e: any) => any;\r\n    setEmail: (e: any) => any;\r\n    setPassword: (e: any) => any;\r\n}\r\n\r\n\r\n \r\nclass Auth extends React.Component< AuthProps, AuthStates> {\r\n    constructor(props: AuthProps) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            sessionToken: \"\",\r\n            getToken: '',\r\n            setFirstName: (e:any) => {\r\n              this.setState({\r\n                firstName: e\r\n              })\r\n            },\r\n            setLastName: (e:any) => {\r\n              this.setState({\r\n                lastName: e\r\n              })\r\n            },\r\n            setEmail: (e:any) => {\r\n              this.setState({\r\n                email: e\r\n              })\r\n            },\r\n            setPassword: (e:any) => {\r\n              this.setState({\r\n                password: e\r\n              })\r\n            },\r\n           \r\n          }\r\n        };\r\n\r\n       \r\n\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                \r\n                    <Switch>\r\n                        <Route exaxt path='/user/login'>\r\n                            <Login \r\n                            email = {this.state.email}\r\n                            password = {this.state.password}\r\n                            setEmail = {this.state.setEmail}\r\n                            setPassword = {this.state.setPassword}\r\n                            sessionToken = {this.state.sessionToken}\r\n                            getToken={this.state.getToken}\r\n                            updateToken = {this.props.updateToken}\r\n                            redirect = {this.props.redirect}\r\n                            redirectValue = {this.props.redirectValue}\r\n                            />\r\n                        </Route>\r\n                    {/* </Switch>\r\n                </Router>\r\n                <Router>\r\n                    <Switch> */}\r\n                        <Route exact path='/user/signup'>\r\n                            <Signup \r\n                            firstName = {this.state.firstName}\r\n                            lastName = {this.state.lastName}\r\n                            email = {this.state.email}\r\n                            password = {this.state.password}\r\n                            setFirstName = {this.state.setFirstName}\r\n                            setLastName = {this.state.setLastName}\r\n                            setEmail = {this.state.setEmail}\r\n                            setPassword = {this.state.setPassword}\r\n                            sessionToken = {this.state.sessionToken}\r\n                            updateToken = {this.props.updateToken}\r\n                            redirect = {this.props.redirect}\r\n                            redirectValue = {this.props.redirectValue}\r\n                            />\r\n                        </Route>\r\n                    </Switch>\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Auth;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Login.tsx",["132"],"import React from 'react'\r\nimport {Container} from '@material-ui/core';\r\n\r\nimport { Redirect, } from 'react-router-dom'\r\n\r\ntype LoginProps = {\r\n    email: string;\r\n    password: string;\r\n    updateToken: (newToken:string, userId:string) => void;\r\n    sessionToken: any;\r\n    getToken: any;\r\n    setEmail: (e: any) => any;\r\n    setPassword: (e: any) => any;\r\n    redirect: () => void\r\n    redirectValue: string\r\n}\r\n\r\n \r\nclass Login extends React.Component<LoginProps, {redirectValue: null|string} > {\r\n    constructor(props: LoginProps) {\r\n        super(props);\r\n        this.state = {\r\n            redirectValue: null\r\n        }\r\n    }\r\n\r\n    // updateToken = (newToken: any) => {\r\n    //     localStorage.setItem('token', newToken);\r\n    //     this.setState({ sessionToken: newToken });\r\n    //     console.log(newToken);\r\n    //   };\r\n\r\n    // history = useHistory()\r\n\r\n    handleSubmit = (event:any) => {\r\n        event.preventDefault();\r\n        fetch('http://localhost:3500/user/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                user: {\r\n                    email: this.props.email,\r\n                    password: this.props.password\r\n                }\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n            // .then((res) => res.json())\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                  console.log(\"Login successful.\")\r\n                } else {\r\n                  console.log(\"Login failed.\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                this.props.updateToken(data.sessionToken, data.user.id)\r\n                // this.props.redirect()\r\n                console.log(data.sessionToken)\r\n                this.setState({redirectValue: '/userhome'})\r\n                // this.props.history.push('/testhome')\r\n            })\r\n    }\r\n\r\n\r\n    \r\n\r\n    render() { \r\n        if (this.state.redirectValue){\r\n            return <Redirect to = {this.state.redirectValue} />\r\n        }\r\n        return (\r\n            <div className='center'>\r\n                \r\n                <Container maxWidth=\"sm\">\r\n                <h3>Login</h3>\r\n                \r\n                <form onSubmit = {this.handleSubmit}>\r\n               \r\n                <label htmlFor=\"email\">Email:</label>\r\n                <br />\r\n                <input id=\"email\" \r\n                        // aria-describedby=\"my-helper-text\" \r\n                        className='email' \r\n                        onChange={(e) => this.props.setEmail(e.target.value)} \r\n                        value={this.props.email}/>\r\n\r\n                <br />\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <br />\r\n                <input id=\"password\" \r\n                        // aria-describedby=\"my-helper-text\" \r\n                        className='password' \r\n                        onChange={(e) => this.props.setPassword(e.target.value)} \r\n                        value={this.props.password}/>\r\n                <br />\r\n                <input type=\"submit\" value=\"Submit\" />\r\n                </form> \r\n                </Container>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Login;\r\n\r\n{/* <FormControl onSubmit={this.handleSubmit}>\r\n                        <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n                        <Input \r\n                        id=\"email\" \r\n                        aria-describedby=\"my-helper-text\" \r\n                        className='email' \r\n                        onChange={(e) => this.props.setEmail(e.target.value)} \r\n                        value={this.props.email} />\r\n                        <FormHelperText id=\"my-helper-text\">We'll never share your email.\r\n                        </FormHelperText>\r\n                    </FormControl >\r\n                    <br />\r\n                    <FormControl onSubmit={this.handleSubmit}>\r\n                        <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                        <Input \r\n                        id=\"password\" \r\n                        aria-describedby=\"my-helper-text\" \r\n                        className='password' \r\n                        onChange={(e) => this.props.setPassword(e.target.value)} \r\n                        value={this.props.password} />\r\n                        <FormHelperText id=\"my-helper-text\"> Don't forget this!\r\n                        </FormHelperText>\r\n                    </FormControl>\r\n                        <br />\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" >Signup</Button> */}","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\auth\\Signup.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\theme.tsx",[],["133","134"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\Footer.tsx",["135"],"import React from 'react';\r\n\r\n\r\nexport interface Props {\r\n    \r\n}\r\n \r\nexport interface State {\r\n    \r\n}\r\n \r\nclass Footer extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    footerStyle = {\r\n        root: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            bottom: '0px',\r\n            width: '100%',\r\n            height: '50px',\r\n            backgroundColor: 'black',\r\n            color: 'white',\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div style = {this.footerStyle.root}>\r\n                <p>This is the footer!</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\SideBar.tsx",["136"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\IndividualMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\home\\UserHome.tsx",["137","138"],"import React from 'react';\r\n// import { Redirect, Switch, Route} from 'react-router-dom'\r\n\r\nimport {Button, Grid } from '@material-ui/core'\r\n\r\nimport IndividualMovie from '../movie/IndividualMovie';\r\nimport AddMovie from '../movie/AddMovie';\r\n\r\n\r\n\r\ntype UserHomeProps = {\r\n    sessionToken: string\r\n}\r\n \r\ntype UserHomeStates = {\r\n    movie: any,\r\n    movieTitle: string,\r\n    movieYear: number,\r\n    movieDuration: number,\r\n    movieDescription: string,\r\n    addMovie: boolean\r\n    reviewTitle: string,\r\n    reviewEmotion: string,\r\n    reviewAuthor: string,\r\n    comment: string,\r\n    commentAuthor: string\r\n    // update these to eventlister instead of any //\r\n    setMovie: (e:any) => void;\r\n    setReviewTitle: (e: any) => any;\r\n    setReviewEmotion: (e: any) => any;\r\n    setReviewAuthor: (e: any) => any;\r\n    setComment: (e: any) => any;\r\n    setCommentAuthor: (e: any) => any;\r\n    updateToken: any;\r\n    sessionToken: any;\r\n    \r\n\r\n}\r\n\r\n//TRYING TO SEND MOVIE OBJECT DOWN TO INDIVIDUAL MOVIE TO BE MAPPED //\r\n \r\nclass UserHome extends React.Component<UserHomeProps, UserHomeStates> {\r\n    constructor(props: UserHomeProps) {\r\n        super(props);\r\n        this.state = {\r\n            movie: [],\r\n            movieTitle: \"\",\r\n            movieYear: 0,\r\n            movieDuration: 0,\r\n            movieDescription: \"\",\r\n            addMovie: false,\r\n            reviewTitle: \" \",\r\n            reviewEmotion: \" \",\r\n            reviewAuthor: \"\",\r\n            comment: \"\",\r\n            commentAuthor: \"\",\r\n            updateToken: \"\",\r\n            sessionToken: \"\",\r\n            setMovie: (e:any) => {\r\n                this.setState({\r\n                  movie: e })\r\n            },\r\n            setReviewTitle: (e) => {\r\n              this.setState({\r\n                reviewTitle: e\r\n              })\r\n            },\r\n            setReviewEmotion: (e) => {\r\n              this.setState({\r\n                reviewEmotion: e\r\n              })\r\n            },\r\n            setReviewAuthor: (e) => {\r\n                this.setState({\r\n                  reviewAuthor: e\r\n                })\r\n            },\r\n            setComment: (e) => {\r\n                this.setState({\r\n                  comment: e\r\n                })\r\n            },\r\n            setCommentAuthor: (e) => {\r\n                this.setState({\r\n                  commentAuthor: e\r\n                })\r\n              }\r\n          }\r\n        }\r\n\r\n        fetchMovies = () => {\r\n            fetch('http://localhost:3500/movie/', {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': localStorage.getItem('token')|| ''\r\n                })\r\n            }) .then((movie) => movie.json())\r\n               .then((movieData) => {\r\n                    this.setState({\r\n                        movie: movieData\r\n                    })\r\n                    console.log(movieData)\r\n               }) .catch (\r\n                   (err) => console.log(err)\r\n               )\r\n        }\r\n\r\n        componentDidMount() {\r\n            if (localStorage.getItem('token')) {\r\n            this.fetchMovies();\r\n            }\r\n        }\r\n\r\n        movieMapper = () => {\r\n            return(this.state.movie?.map((movie:any,index:number) => {\r\n                return (\r\n                    <div key = {movie.id}>\r\n                    <IndividualMovie \r\n                    movie={movie}                          \r\n                    sessionToken = {this.props.sessionToken}\r\n                    // fetchMovies={this.fetchMovies}  \r\n                    />\r\n                    </div>\r\n                )\r\n            }))\r\n        }\r\n\r\n        addMovieOn = () => {\r\n            this.setState({addMovie: true})\r\n        }\r\n\r\n        addMovieOff = () => {\r\n            this.setState({addMovie: false})\r\n        }\r\n\r\n        // userHomeStyle =  {\r\n        //     root: {\r\n        //         display: 'flex',\r\n        //         alignItems: 'center',\r\n        //         backgroundColor: 'black',\r\n        //         width: '80%',\r\n        //         height: '80%'\r\n        //     }\r\n        // }\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                \r\n            <h3>Welcome User</h3>\r\n                <Grid container\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\">\r\n                {this.movieMapper()}\r\n                </Grid>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                    <div>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={(e:any)=>this.addMovieOn()}>Post A Movie</Button>\r\n                    </div>\r\n                    \r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    \r\n                {this.state.addMovie ?\r\n                    <AddMovie \r\n                    sessionToken={this.props.sessionToken}\r\n                    addMovie={this.state.addMovie}\r\n                    fetchMovies={this.fetchMovies}\r\n                    addMovieOff={this.addMovieOff}\r\n                    /> : <></>\r\n                }\r\n\r\n            \r\n\r\n        </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default UserHome;\r\n\r\n// COMMENT GRAVEYARD // \r\n\r\n// interface Movie {\r\n//     movieTitle: string,\r\n//     movieTitle: string,\r\n//     movieYear: number,\r\n//     movieDuration: number,\r\n//     movieDescription: string,\r\n\r\n// }\r\n\r\n// setMovieTitle: (e: any) => any;\r\n    // setMovieYear: (e: any) => any;\r\n    // setMovieDuration: (e: any) => any;\r\n    // setMovieDescription: (e: any) => any;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\AddMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\AddReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\ViewReviews.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\AddComment.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\IndividualReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\ViewComments.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\Profile.tsx",["139"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyMovies.tsx",["140","141","142"],"import React from 'react'\r\n\r\nimport EditMovie from '../movie/EditMovie'\r\nimport DeleteMovie from '../movie/DeleteMovie'\r\n\r\nimport { Button, ButtonGroup, Card, CardActions, CardContent, Grid, List } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\n\r\n\r\ntype MyMoviesProps = {\r\n    // myMovies: any;\r\n    // fetchMyMovies: () => void\r\n    sessionToken: string;\r\n    userId: string\r\n    \r\n}\r\n \r\ntype MyMoviesStates = {\r\n    editMovieOn: boolean\r\n    myMovies: any,\r\n    movieId: number,\r\n    setMovieId: (e:any) => void,\r\n    deleteMovieOn: boolean\r\n}\r\n \r\nclass MyMovies extends React.Component<MyMoviesProps, MyMoviesStates> {\r\n    \r\n    constructor(props: MyMoviesProps) {\r\n        super(props);\r\n        this.state = {\r\n            editMovieOn: false,\r\n            myMovies: '',\r\n            movieId: 0,\r\n            deleteMovieOn: false,\r\n            setMovieId: (e) => {\r\n                this.setState({\r\n                  movieId: e\r\n                })\r\n            },\r\n         };\r\n    }\r\n\r\n componentDidMount() {\r\n    this.fetchMyMovies();\r\n}\r\n\r\nfetchMyMovies = () => {\r\n    console.log(this.props.userId)\r\n    // e.preventDefault()\r\n    fetch(`http://localhost:3500/movie/mymovies/${localStorage.getItem('userId')}`, {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': localStorage.getItem('token')|| ''\r\n                })\r\n            }) .then((movie) => movie.json())\r\n               .then((movieData) => {\r\n                    this.myMoviesResults(movieData)\r\n                    console.log(movieData)\r\n               }) .catch (\r\n                   (err) => console.log(err)\r\n               )\r\n}\r\n\r\nmyMoviesResults = (allMyMovies:[]) => {\r\n    console.log(\"My Movies: \", allMyMovies)\r\n    this.setState({myMovies: allMyMovies})\r\n    // this.setState({openMovies: true})\r\n}\r\n\r\neditMovieOff = () => {\r\n    this.setState({editMovieOn:false})\r\n}\r\n\r\ndeleteMovieOff = () => {\r\n    this.setState({deleteMovieOn:false})\r\n}\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                    <h3>My Movies</h3>\r\n            {this.state.myMovies.length > 0 ? (this.state.myMovies?.map((movies:any,index:number) => (\r\n                    <Grid \r\n                    key={movies.id}                \r\n                    container\r\n                    // spacing={2}\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    xs={4}\r\n                    >\r\n                            <Card \r\n                            onMouseEnter={e => {\r\n                                this.setState({\r\n                                    movieId: movies.id\r\n                                })\r\n                                console.log(this.state.movieId)}}>\r\n                                <CardContent>\r\n                                        <h4>Title: {this.state.myMovies[index].title}</h4>\r\n                                    <List>\r\n                                        <li>\r\n                                        Year: {this.state.myMovies[index].year}\r\n                                        </li>\r\n                                        <li>\r\n                                            Duration: {this.state.myMovies[index].duration}\r\n                                        </li>\r\n                                        <li>\r\n                                            Description: {this.state.myMovies[index].description}\r\n                                        </li>\r\n                                    </List>\r\n                                    <CardActions >\r\n                                        <Button \r\n                                        onClick={() => this.setState({editMovieOn: true})}\r\n                                        startIcon={<EditIcon />}\r\n                                         > Edit </Button>\r\n                                        <Button \r\n                                        onClick={() => this.setState({deleteMovieOn: true})}\r\n                                        startIcon={<DeleteForeverIcon />}> Delete </Button>\r\n                                    </CardActions>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            {this.state.editMovieOn ? \r\n                            <EditMovie\r\n                            editMovieOff={this.editMovieOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyMovies={this.fetchMyMovies}\r\n                            myMovies={this.state.myMovies}\r\n                            movieId={this.state.movieId}\r\n                            /> : <> </>}\r\n\r\n                            {this.state.deleteMovieOn ? \r\n                            <DeleteMovie\r\n                            deleteMovieOff={this.deleteMovieOff}\r\n                            sessionToken={this.props.sessionToken}\r\n                            fetchMyMovies={this.fetchMyMovies}\r\n                            myMovies={this.state.myMovies}\r\n                            movieId={this.state.movieId}\r\n                            /> : <> </>}\r\n                    </Grid>\r\n\r\n            )\r\n            )) : ( <>No Movies!</> )              \r\n            }\r\n\r\n            \r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyMovies;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyComments.tsx",["143"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\profile\\MyReviews.tsx",["144"],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\EditMovie.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\EditReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\EditComment.tsx",["145","146","147","148"],"import { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Input, InputLabel, TextField } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\n\r\n\r\ntype editCommentProps = {\r\n    editCommentOff: () => void;\r\n    sessionToken: string;\r\n    fetchMyComments: () => void;\r\n    myComments: any;\r\n    commentId:number\r\n}\r\n \r\ntype editCommentStates = {\r\n    open: boolean;\r\n    comment: string,\r\n    author: string,\r\n    // addComment: boolean,\r\n    // currentComment: any;\r\n    setComment: (e: any) => any;\r\n    setAuthor: (e:any) => any;\r\n}\r\n \r\nclass EditComment extends React.Component<editCommentProps, editCommentStates> {\r\n    constructor(props: editCommentProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: true,\r\n            comment: '',\r\n            author: '',\r\n            // addComment: true,\r\n            // currentComment: '',\r\n            setComment: (e) => {\r\n                this.setState({\r\n                  comment: e\r\n                })\r\n            },\r\n            setAuthor: (e) => {\r\n                this.setState({\r\n                  author: e\r\n                })\r\n            },\r\n        };\r\n    }\r\n\r\n\r\ncomponentDidMount() {\r\n    // this.fetchCurrentComment()\r\n    // console.log(this.props.CommentId)\r\n}\r\n\r\n\r\n\r\n    handleSubmit = (e:any) => {\r\n        \r\n        console.log(this.props.commentId)\r\n        e.preventDefault();\r\n        fetch(`http://localhost:3500/comment/${this.props.commentId}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                comment: {\r\n                    comment: this.state.comment,\r\n                    author: this.state.author,\r\n                }\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.sessionToken\r\n            })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data)\r\n                this.state.setComment('')\r\n                this.state.setAuthor('')\r\n                this.props.fetchMyComments()\r\n                this.handleClose()\r\n    \r\n            })\r\n    }\r\n    \r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n        this.props.editCommentOff()\r\n    }\r\n\r\n    //  fetchCurrentMovie = async () => {\r\n    //     await fetch(`http://localhost:3500/movie/${this.props.movieId}`, {\r\n    //         method: 'GET',\r\n    //         headers: new Headers({\r\n    //             'Content-Type': 'application/json',\r\n    //             'Authorization': this.props.sessionToken\r\n    //         })\r\n    //     }) .then((movie) => movie.json())\r\n    //        .then((movieData) => {\r\n    //             this.setState({\r\n    //                 currentMovie: movieData\r\n    //             })\r\n    //             console.log(movieData)\r\n    //             console.log(this.state.currentMovie.title)\r\n    //             this.setState({open : true})\r\n    //        }) .catch (\r\n    //            (err) => console.log(err)\r\n    //        )\r\n    // }\r\n\r\n\r\n\r\n    // dialogStyle = {\r\n    //     root: {\r\n    //         alignItems:'center'\r\n    //     }\r\n    // }\r\n    render() { \r\n        return (  \r\n            <Dialog open={this.state.open} maxWidth='md' fullWidth >\r\n                <DialogTitle>Edit Your Comment</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField \r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"comment\"\r\n                    label=\"Comment\"\r\n                    // type=\"email\"\r\n                    fullWidth\r\n                    onChange={(e)=> this.state.setComment(e.target.value)}\r\n                      />\r\n                </DialogContent>\r\n                <DialogContent>\r\n                    <TextField \r\n                    \r\n                    margin=\"dense\"\r\n                    id=\"author\"\r\n                    label=\"Your Name\"\r\n                    // type=\"email\"\r\n                    onChange={(e)=> this.state.setAuthor(e.target.value)}\r\n                      />\r\n                </DialogContent>\r\n                \r\n                    <Button onClick={this.handleClose}>Cancel</Button>\r\n                    <Button type='submit' onClick={this.handleSubmit}>Confirm</Button>\r\n                \r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n \r\nexport default EditComment;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\movie\\DeleteMovie.tsx",["149"],"import { Button, Dialog, DialogActions, DialogContent, Modal } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\ntype DeleteMovieProps = {\r\n    deleteMovieOff: () => void;\r\n    sessionToken: string;\r\n    fetchMyMovies: () => void;\r\n    myMovies: any;\r\n    movieId: number;\r\n}\r\n\r\ntype DeleteMovieStates = {\r\n    open: boolean;\r\n    \r\n}\r\n \r\nclass DeleteMovie extends React.Component<DeleteMovieProps, DeleteMovieStates> {\r\n    constructor(props: DeleteMovieProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        };\r\n    }\r\n\r\n    handleDelete = (e:any) => {\r\n        fetch(`http://localhost:3500/movie/${this.props.movieId}`,{\r\n        method: 'DELETE',\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': this.props.sessionToken\r\n        })\r\n    })\r\n    .then(response => response.json());\r\n    console.log('Movie was deleted.');\r\n    this.props.deleteMovieOff()\r\n    this.props.fetchMyMovies();\r\n    }   \r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n        this.props.deleteMovieOff()\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <>\r\n            <Dialog open={this.state.open}>\r\n                <DialogContent>Delete this Movie?</DialogContent>\r\n                <DialogActions>\r\n                <Button\r\n                startIcon={<CancelIcon/>}\r\n                onClick={this.handleClose}>Cancel</Button>\r\n                <Button\r\n                startIcon={<DeleteForeverIcon/>}\r\n                onClick={this.handleDelete}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default DeleteMovie;","C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\review\\DeleteReview.tsx",[],"C:\\Users\\Aaron\\Desktop\\ElevenFifty\\javascriptAug2020\\Javascript-Library\\redBadge\\project\\movieflix-client\\src\\components\\comment\\DeleteComment.tsx",["150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":15,"column":5,"nodeType":"157","messageId":"158","endLine":18,"endColumn":6},{"ruleId":"159","severity":1,"message":"160","line":3,"column":27,"nodeType":"161","messageId":"162","endLine":3,"endColumn":33},{"ruleId":"163","severity":1,"message":"164","line":110,"column":1,"nodeType":"165","messageId":"166","endLine":134,"endColumn":105},{"ruleId":"151","replacedBy":"167"},{"ruleId":"153","replacedBy":"168"},{"ruleId":"155","severity":1,"message":"156","line":13,"column":5,"nodeType":"157","messageId":"158","endLine":15,"endColumn":6},{"ruleId":"159","severity":1,"message":"169","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":12},{"ruleId":"170","severity":1,"message":"171","line":92,"column":13,"nodeType":"172","messageId":"173","endLine":104,"endColumn":25,"fix":"174"},{"ruleId":"170","severity":1,"message":"175","line":92,"column":13,"nodeType":"172","messageId":"173","endLine":98,"endColumn":21,"fix":"176"},{"ruleId":"163","severity":1,"message":"164","line":91,"column":1,"nodeType":"165","messageId":"166","endLine":133,"endColumn":23},{"ruleId":"159","severity":1,"message":"177","line":6,"column":18,"nodeType":"161","messageId":"162","endLine":6,"endColumn":29},{"ruleId":"170","severity":1,"message":"171","line":52,"column":5,"nodeType":"172","messageId":"173","endLine":62,"endColumn":25,"fix":"178"},{"ruleId":"170","severity":1,"message":"175","line":52,"column":5,"nodeType":"172","messageId":"173","endLine":58,"endColumn":21,"fix":"179"},{"ruleId":"159","severity":1,"message":"177","line":6,"column":18,"nodeType":"161","messageId":"162","endLine":6,"endColumn":29},{"ruleId":"159","severity":1,"message":"177","line":6,"column":18,"nodeType":"161","messageId":"162","endLine":6,"endColumn":29},{"ruleId":"159","severity":1,"message":"180","line":1,"column":26,"nodeType":"161","messageId":"162","endLine":1,"endColumn":39},{"ruleId":"159","severity":1,"message":"181","line":1,"column":69,"nodeType":"161","messageId":"162","endLine":1,"endColumn":80},{"ruleId":"159","severity":1,"message":"182","line":1,"column":82,"nodeType":"161","messageId":"162","endLine":1,"endColumn":87},{"ruleId":"159","severity":1,"message":"183","line":1,"column":89,"nodeType":"161","messageId":"162","endLine":1,"endColumn":99},{"ruleId":"159","severity":1,"message":"184","line":1,"column":56,"nodeType":"161","messageId":"162","endLine":1,"endColumn":61},{"ruleId":"159","severity":1,"message":"184","line":1,"column":56,"nodeType":"161","messageId":"162","endLine":1,"endColumn":61},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["185"],["186"],"'Grid' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"187","text":"188"},"Unexpected whitespace before property then.",{"range":"189","text":"188"},"'ButtonGroup' is defined but never used.",{"range":"190","text":"188"},{"range":"191","text":"188"},"'DialogActions' is defined but never used.","'FormControl' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation",[2965,2967],".",[2729,2731],[1743,1745],[1557,1559]]